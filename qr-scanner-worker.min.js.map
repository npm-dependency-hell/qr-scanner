{"version":3,"file":"qr-scanner-worker.min.js","sources":["node_modules/jsqr-es6/src/BitMatrix.ts","node_modules/jsqr-es6/src/binarizer/index.ts","node_modules/jsqr-es6/src/decoder/decodeData/BitStream.ts","node_modules/jsqr-es6/src/decoder/decodeData/index.ts","node_modules/jsqr-es6/src/decoder/reedsolomon/GenericGFPoly.ts","node_modules/jsqr-es6/src/decoder/reedsolomon/GenericGF.ts","node_modules/jsqr-es6/src/decoder/reedsolomon/index.ts","node_modules/jsqr-es6/src/decoder/version.ts","node_modules/jsqr-es6/src/decoder/decoder.ts","node_modules/jsqr-es6/src/extractor/index.ts","node_modules/jsqr-es6/src/locator/index.ts","node_modules/jsqr-es6/src/index.ts","src/worker.ts"],"sourcesContent":["export class BitMatrix {\n  public static createEmpty(width: number, height: number) {\n    return new BitMatrix(new Uint8ClampedArray(width * height), width);\n  }\n\n  public width: number;\n  public height: number;\n  private data: Uint8ClampedArray;\n\n  constructor(data: Uint8ClampedArray, width: number) {\n    this.width = width;\n    this.height = data.length / width;\n    this.data = data;\n  }\n\n  public get(x: number, y: number): boolean {\n    if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\n      return false;\n    }\n    return !!this.data[y * this.width + x];\n  }\n\n  public set(x: number, y: number, v: boolean) {\n    this.data[y * this.width + x] = v ? 1 : 0;\n  }\n\n  public setRegion(left: number, top: number, width: number, height: number, v: boolean) {\n    for (let y = top; y < top + height; y++) {\n      for (let x = left; x < left + width; x++) {\n        this.set(x, y, !!v);\n      }\n    }\n  }\n}\n","import {BitMatrix} from \"../BitMatrix\";\nimport {GreyscaleWeights} from \"../index\";\n\nconst REGION_SIZE = 8;\nconst MIN_DYNAMIC_RANGE = 24;\n\nfunction numBetween(value: number, min: number, max: number): number {\n  return value < min ? min : value > max ? max : value;\n}\n\n// Like BitMatrix but accepts arbitry Uint8 values\nclass Matrix {\n  private data: Uint8ClampedArray;\n  private width: number;\n  constructor(width: number, height: number, buffer?: Uint8ClampedArray) {\n    this.width = width;\n    const bufferSize = width * height;\n    if (buffer && buffer.length !== bufferSize) {\n      throw new Error(\"Wrong buffer size\");\n    }\n    this.data = buffer || new Uint8ClampedArray(bufferSize);\n  }\n  public get(x: number, y: number) {\n    return this.data[y * this.width + x];\n  }\n  public set(x: number, y: number, value: number) {\n    this.data[y * this.width + x] = value;\n  }\n}\n\nexport function binarize(data: Uint8ClampedArray, width: number, height: number, returnInverted: boolean,\n                         greyscaleWeights: GreyscaleWeights, canOverwriteImage: boolean) {\n  const pixelCount = width * height;\n  if (data.length !== pixelCount * 4) {\n    throw new Error(\"Malformed data passed to binarizer.\");\n  }\n  // assign the greyscale and binary image within the rgba buffer as the rgba image will not be needed after conversion\n  let bufferOffset = 0;\n  // Convert image to greyscale\n  let greyscaleBuffer: Uint8ClampedArray;\n  if (canOverwriteImage) {\n    greyscaleBuffer = new Uint8ClampedArray(data.buffer, bufferOffset, pixelCount);\n    bufferOffset += pixelCount;\n  }\n  const greyscalePixels = new Matrix(width, height, greyscaleBuffer);\n  if (greyscaleWeights.useIntegerApproximation) {\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const pixelPosition = (y * width + x) * 4;\n        const r = data[pixelPosition];\n        const g = data[pixelPosition + 1];\n        const b = data[pixelPosition + 2];\n        greyscalePixels.set(x, y,\n          // tslint:disable-next-line no-bitwise\n          (greyscaleWeights.red * r + greyscaleWeights.green * g + greyscaleWeights.blue * b + 128) >> 8);\n      }\n    }\n  } else {\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const pixelPosition = (y * width + x) * 4;\n        const r = data[pixelPosition];\n        const g = data[pixelPosition + 1];\n        const b = data[pixelPosition + 2];\n        greyscalePixels.set(x, y,\n          greyscaleWeights.red * r + greyscaleWeights.green * g + greyscaleWeights.blue * b);\n      }\n    }\n  }\n  const horizontalRegionCount = Math.ceil(width / REGION_SIZE);\n  const verticalRegionCount = Math.ceil(height / REGION_SIZE);\n  const blackPointsCount = horizontalRegionCount * verticalRegionCount;\n\n  let blackPointsBuffer: Uint8ClampedArray;\n  if (canOverwriteImage) {\n    blackPointsBuffer = new Uint8ClampedArray(data.buffer, bufferOffset, blackPointsCount);\n    bufferOffset += blackPointsCount;\n  }\n  const blackPoints = new Matrix(horizontalRegionCount, verticalRegionCount, blackPointsBuffer);\n  for (let verticalRegion = 0; verticalRegion < verticalRegionCount; verticalRegion++) {\n    for (let hortizontalRegion = 0; hortizontalRegion < horizontalRegionCount; hortizontalRegion++) {\n      let min = Infinity;\n      let max = 0;\n      for (let y = 0; y < REGION_SIZE; y++) {\n        for (let x = 0; x < REGION_SIZE; x++) {\n          const pixelLumosity =\n            greyscalePixels.get(hortizontalRegion * REGION_SIZE + x, verticalRegion * REGION_SIZE + y);\n          min = Math.min(min, pixelLumosity);\n          max = Math.max(max, pixelLumosity);\n        }\n      }\n      // We could also compute the real average of all pixels but following the assumption that the qr code consists\n      // of bright and dark pixels and essentially not much in between, by (min + max)/2 we make the cut really between\n      // those two classes. If using the average over all pixel in a block of mostly bright pixels and few dark pixels,\n      // the avg would tend to the bright side and darker bright pixels could be interpreted as dark.\n      let average = (min + max) / 2;\n      // Small bias towards black by moving the threshold up. We do this, as in the finder patterns white holes tend\n      // to appear which makes them undetectable.\n      const blackBias = 1.11;\n      average = Math.min(255, average * blackBias);\n      if (max - min <= MIN_DYNAMIC_RANGE) {\n        // If variation within the block is low, assume this is a block with only light or only\n        // dark pixels. In that case we do not want to use the average, as it would divide this\n        // low contrast area into black and white pixels, essentially creating data out of noise.\n        //\n        // Default the blackpoint for these blocks to be half the min - effectively white them out\n        average = min / 2;\n\n        if (verticalRegion > 0 && hortizontalRegion > 0) {\n          // Correct the \"white background\" assumption for blocks that have neighbors by comparing\n          // the pixels in this block to the previously calculated black points. This is based on\n          // the fact that dark barcode symbology is always surrounded by some amount of light\n          // background for which reasonable black point estimates were made. The bp estimated at\n          // the boundaries is used for the interior.\n\n          // The (min < bp) is arbitrary but works better than other heuristics that were tried.\n          const averageNeighborBlackPoint = (\n            blackPoints.get(hortizontalRegion, verticalRegion - 1) +\n            (2 * blackPoints.get(hortizontalRegion - 1, verticalRegion)) +\n            blackPoints.get(hortizontalRegion - 1, verticalRegion - 1)\n          ) / 4;\n          if (min < averageNeighborBlackPoint) {\n            average = averageNeighborBlackPoint; // no need to apply black bias as already applied to neighbors\n          }\n        }\n      }\n      blackPoints.set(hortizontalRegion, verticalRegion, average);\n    }\n  }\n\n  let binarized: BitMatrix;\n  if (canOverwriteImage) {\n    const binarizedBuffer = new Uint8ClampedArray(data.buffer, bufferOffset, pixelCount);\n    bufferOffset += pixelCount;\n    binarized = new BitMatrix(binarizedBuffer, width);\n  } else {\n    binarized = BitMatrix.createEmpty(width, height);\n  }\n\n  let inverted: BitMatrix = null;\n  if (returnInverted) {\n    if (canOverwriteImage) {\n      const invertedBuffer = new Uint8ClampedArray(data.buffer, bufferOffset, pixelCount);\n      inverted = new BitMatrix(invertedBuffer, width);\n    } else {\n      inverted = BitMatrix.createEmpty(width, height);\n    }\n  }\n\n  for (let verticalRegion = 0; verticalRegion < verticalRegionCount; verticalRegion++) {\n    for (let hortizontalRegion = 0; hortizontalRegion < horizontalRegionCount; hortizontalRegion++) {\n      const left = numBetween(hortizontalRegion, 2, horizontalRegionCount - 3);\n      const top = numBetween(verticalRegion, 2, verticalRegionCount - 3);\n      let sum = 0;\n      for (let xRegion = -2; xRegion <= 2; xRegion++) {\n        for (let yRegion = -2; yRegion <= 2; yRegion++) {\n          sum += blackPoints.get(left + xRegion, top + yRegion);\n        }\n      }\n      const threshold = sum / 25;\n      for (let xRegion = 0; xRegion < REGION_SIZE; xRegion++) {\n        for (let yRegion = 0; yRegion < REGION_SIZE; yRegion++) {\n          const x = hortizontalRegion * REGION_SIZE + xRegion;\n          const y = verticalRegion * REGION_SIZE + yRegion;\n          const lum = greyscalePixels.get(x, y);\n          binarized.set(x, y, lum <= threshold);\n          if (returnInverted) {\n            inverted.set(x, y, !(lum <= threshold));\n          }\n        }\n      }\n    }\n  }\n  if (returnInverted) {\n    return { binarized, inverted };\n  }\n  return { binarized };\n}\n","// tslint:disable:no-bitwise\n\nexport class BitStream {\n  private bytes: Uint8ClampedArray;\n  private byteOffset: number = 0;\n  private bitOffset: number = 0;\n\n  constructor(bytes: Uint8ClampedArray) {\n    this.bytes = bytes;\n  }\n\n  public readBits(numBits: number): number {\n    if (numBits < 1 || numBits > 32 || numBits > this.available()) {\n      throw new Error(\"Cannot read \" + numBits.toString() + \" bits\");\n    }\n\n    let result = 0;\n    // First, read remainder from current byte\n    if (this.bitOffset > 0) {\n      const bitsLeft = 8 - this.bitOffset;\n      const toRead = numBits < bitsLeft ? numBits : bitsLeft;\n      const bitsToNotRead = bitsLeft - toRead;\n      const mask = (0xFF >> (8 - toRead)) << bitsToNotRead;\n      result = (this.bytes[this.byteOffset] & mask) >> bitsToNotRead;\n      numBits -= toRead;\n      this.bitOffset += toRead;\n      if (this.bitOffset === 8) {\n        this.bitOffset = 0;\n        this.byteOffset++;\n      }\n    }\n\n    // Next read whole bytes\n    if (numBits > 0) {\n      while (numBits >= 8) {\n        result = (result << 8) | (this.bytes[this.byteOffset] & 0xFF);\n        this.byteOffset++;\n        numBits -= 8;\n      }\n\n      // Finally read a partial byte\n      if (numBits > 0) {\n        const bitsToNotRead = 8 - numBits;\n        const mask = (0xFF >> bitsToNotRead) << bitsToNotRead;\n        result = (result << numBits) | ((this.bytes[this.byteOffset] & mask) >> bitsToNotRead);\n        this.bitOffset += numBits;\n      }\n    }\n    return result;\n  }\n\n  public available(): number {\n    return 8 * (this.bytes.length - this.byteOffset) - this.bitOffset;\n  }\n}\n","// tslint:disable:no-bitwise\nimport { BitStream } from \"./BitStream\";\n\nexport interface Chunk {\n  type: Mode;\n  text: string;\n}\n\nexport interface ByteChunk {\n  type: Mode.Byte | Mode.Kanji;\n  bytes: number[];\n}\n\nexport interface ECIChunk {\n  type: Mode.ECI;\n  assignmentNumber: number;\n}\n\nexport interface StructuredAppend {\n  type: Mode.StructuredAppend;\n  currentSequence: number;\n  totalSequence: number;\n  parity: number;\n}\n\nexport type Chunks = Array<Chunk | ByteChunk | ECIChunk | StructuredAppend>;\n\nexport interface DecodedQR {\n  text: string;\n  bytes: number[];\n  chunks: Chunks;\n  version: number;\n}\n\nexport enum Mode {\n  Numeric = \"numeric\",\n  Alphanumeric = \"alphanumeric\",\n  Byte = \"byte\",\n  Kanji = \"kanji\",\n  ECI = \"eci\",\n  StructuredAppend = \"structuredappend\",\n}\n\nenum ModeByte {\n  Terminator = 0x0,\n  Numeric = 0x1,\n  Alphanumeric = 0x2,\n  Byte = 0x4,\n  Kanji = 0x8,\n  ECI = 0x7,\n  StructuredAppend = 0x3,\n  // FNC1FirstPosition = 0x5,\n  // FNC1SecondPosition = 0x9,\n}\n\nfunction decodeNumeric(stream: BitStream, size: number) {\n  const bytes: number[] = [];\n  let text = \"\";\n\n  const characterCountSize = [10, 12, 14][size];\n  let length = stream.readBits(characterCountSize);\n  // Read digits in groups of 3\n  while (length >= 3) {\n    const num = stream.readBits(10);\n    if (num >= 1000) {\n      throw new Error(\"Invalid numeric value above 999\");\n    }\n\n    const a = Math.floor(num / 100);\n    const b = Math.floor(num / 10) % 10;\n    const c = num % 10;\n\n    bytes.push(48 + a, 48 + b, 48 + c);\n    text += a.toString() + b.toString() + c.toString();\n    length -= 3;\n  }\n\n  // If the number of digits aren't a multiple of 3, the remaining digits are special cased.\n  if (length === 2) {\n    const num = stream.readBits(7);\n    if (num >= 100) {\n      throw new Error(\"Invalid numeric value above 99\");\n    }\n\n    const a = Math.floor(num / 10);\n    const b = num % 10;\n\n    bytes.push(48 + a, 48 + b);\n    text += a.toString() + b.toString();\n  } else if (length === 1) {\n    const num = stream.readBits(4);\n    if (num >= 10) {\n      throw new Error(\"Invalid numeric value above 9\");\n    }\n\n    bytes.push(48 + num);\n    text += num.toString();\n  }\n\n  return { bytes, text };\n}\n\nconst AlphanumericCharacterCodes = [\n  \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\",\n  \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\",\n  \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\",\n  \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\",\n  \" \", \"$\", \"%\", \"*\", \"+\", \"-\", \".\", \"/\", \":\",\n];\n\nfunction decodeAlphanumeric(stream: BitStream, size: number) {\n  const bytes: number[] = [];\n  let text = \"\";\n\n  const characterCountSize = [9, 11, 13][size];\n  let length = stream.readBits(characterCountSize);\n  while (length >= 2) {\n    const v = stream.readBits(11);\n\n    const a = Math.floor(v / 45);\n    const b = v % 45;\n\n    bytes.push(AlphanumericCharacterCodes[a].charCodeAt(0), AlphanumericCharacterCodes[b].charCodeAt(0));\n    text += AlphanumericCharacterCodes[a] + AlphanumericCharacterCodes[b];\n    length -= 2;\n  }\n\n  if (length === 1) {\n    const a = stream.readBits(6);\n    bytes.push(AlphanumericCharacterCodes[a].charCodeAt(0));\n    text += AlphanumericCharacterCodes[a];\n  }\n\n  return { bytes, text };\n}\n\nfunction decodeByte(stream: BitStream, size: number) {\n  const bytes: number[] = [];\n  let text = \"\";\n\n  const characterCountSize = [8, 16, 16][size];\n  const length = stream.readBits(characterCountSize);\n  for (let i = 0; i < length; i++) {\n    const b = stream.readBits(8);\n    bytes.push(b);\n  }\n  try {\n    text += decodeURIComponent(bytes.map(b => `%${(\"0\" + b.toString(16)).substr(-2)}`).join(\"\"));\n  } catch {\n    // failed to decode\n  }\n\n  return { bytes, text };\n}\n\nfunction decodeKanji(stream: BitStream, size: number) {\n  const bytes: number[] = [];\n\n  const characterCountSize = [8, 10, 12][size];\n  const length = stream.readBits(characterCountSize);\n  for (let i = 0; i < length; i++) {\n    const k = stream.readBits(13);\n\n    let c = (Math.floor(k / 0xC0) << 8) | (k % 0xC0);\n    if (c < 0x1F00) {\n      c += 0x8140;\n    } else {\n      c += 0xC140;\n    }\n\n    bytes.push(c >> 8, c & 0xFF);\n  }\n\n  const text = new TextDecoder(\"shift-jis\").decode(Uint8Array.from(bytes));\n  return { bytes, text };\n}\n\nexport function decode(data: Uint8ClampedArray, version: number): DecodedQR {\n  const stream = new BitStream(data);\n\n  // There are 3 'sizes' based on the version. 1-9 is small (0), 10-26 is medium (1) and 27-40 is large (2).\n  const size = version <= 9 ? 0 : version <= 26 ? 1 : 2;\n\n  const result: DecodedQR = {\n    text: \"\",\n    bytes: [],\n    chunks: [],\n    version,\n  };\n\n  while (stream.available() >= 4) {\n    const mode = stream.readBits(4);\n    if (mode === ModeByte.Terminator) {\n      return result;\n    } else if (mode === ModeByte.ECI) {\n      if (stream.readBits(1) === 0) {\n        result.chunks.push({\n          type: Mode.ECI,\n          assignmentNumber: stream.readBits(7),\n        });\n      } else if (stream.readBits(1) === 0) {\n        result.chunks.push({\n          type: Mode.ECI,\n          assignmentNumber: stream.readBits(14),\n        });\n      } else if (stream.readBits(1) === 0) {\n        result.chunks.push({\n          type: Mode.ECI,\n          assignmentNumber: stream.readBits(21),\n        });\n      } else {\n        // ECI data seems corrupted\n        result.chunks.push({\n          type: Mode.ECI,\n          assignmentNumber: -1,\n        });\n      }\n    } else if (mode === ModeByte.Numeric) {\n      const numericResult = decodeNumeric(stream, size);\n      result.text += numericResult.text;\n      result.bytes.push(...numericResult.bytes);\n      result.chunks.push({\n        type: Mode.Numeric,\n        text: numericResult.text,\n      });\n    } else if (mode === ModeByte.Alphanumeric) {\n      const alphanumericResult = decodeAlphanumeric(stream, size);\n      result.text += alphanumericResult.text;\n      result.bytes.push(...alphanumericResult.bytes);\n      result.chunks.push({\n        type: Mode.Alphanumeric,\n        text: alphanumericResult.text,\n      });\n    } else if (mode === ModeByte.Byte) {\n      const byteResult = decodeByte(stream, size);\n      result.text += byteResult.text;\n      result.bytes.push(...byteResult.bytes);\n      result.chunks.push({\n        type: Mode.Byte,\n        bytes: byteResult.bytes,\n        text: byteResult.text,\n      });\n    } else if (mode === ModeByte.Kanji) {\n      const kanjiResult = decodeKanji(stream, size);\n      result.text += kanjiResult.text;\n      result.bytes.push(...kanjiResult.bytes);\n      result.chunks.push({\n        type: Mode.Kanji,\n        bytes: kanjiResult.bytes,\n        text: kanjiResult.text,\n      });\n    } else if (mode === ModeByte.StructuredAppend) {\n      result.chunks.push({\n        type: Mode.StructuredAppend,\n        currentSequence: stream.readBits(4),\n        totalSequence: stream.readBits(4),\n        parity: stream.readBits(8),\n      });\n    }\n  }\n\n  // If there is no data left, or the remaining bits are all 0, then that counts as a termination marker\n  if (stream.available() === 0 || stream.readBits(stream.available()) === 0) {\n    return result;\n  }\n}\n","import GenericGF, { addOrSubtractGF } from \"./GenericGF\";\n\nexport default class GenericGFPoly {\n  private field: GenericGF;\n  private coefficients: Uint8ClampedArray;\n\n  constructor(field: GenericGF, coefficients: Uint8ClampedArray) {\n    if (coefficients.length === 0) {\n      throw new Error(\"No coefficients.\");\n    }\n    this.field = field;\n    const coefficientsLength = coefficients.length;\n    if (coefficientsLength > 1 && coefficients[0] === 0) {\n      // Leading term must be non-zero for anything except the constant polynomial \"0\"\n      let firstNonZero = 1;\n      while (firstNonZero < coefficientsLength && coefficients[firstNonZero] === 0) {\n        firstNonZero++;\n      }\n      if (firstNonZero === coefficientsLength) {\n        this.coefficients = field.zero.coefficients;\n      } else {\n        this.coefficients = new Uint8ClampedArray(coefficientsLength - firstNonZero);\n        for (let i = 0; i < this.coefficients.length; i++) {\n          this.coefficients[i] = coefficients[firstNonZero + i];\n        }\n      }\n    } else {\n      this.coefficients = coefficients;\n    }\n  }\n\n  public degree() {\n    return this.coefficients.length - 1;\n  }\n\n  public isZero() {\n    return this.coefficients[0] === 0;\n  }\n\n  public getCoefficient(degree: number) {\n    return this.coefficients[this.coefficients.length - 1 - degree];\n  }\n\n  public addOrSubtract(other: GenericGFPoly) {\n    if (this.isZero()) {\n      return other;\n    }\n    if (other.isZero()) {\n      return this;\n    }\n\n    let smallerCoefficients = this.coefficients;\n    let largerCoefficients = other.coefficients;\n    if (smallerCoefficients.length > largerCoefficients.length) {\n      [smallerCoefficients, largerCoefficients] = [largerCoefficients, smallerCoefficients];\n    }\n    const sumDiff = new Uint8ClampedArray(largerCoefficients.length);\n    const lengthDiff = largerCoefficients.length - smallerCoefficients.length;\n    for (let i = 0; i < lengthDiff; i++) {\n      sumDiff[i] = largerCoefficients[i];\n    }\n\n    for (let i = lengthDiff; i < largerCoefficients.length; i++) {\n      sumDiff[i] = addOrSubtractGF(smallerCoefficients[i - lengthDiff], largerCoefficients[i]);\n    }\n\n    return new GenericGFPoly(this.field, sumDiff);\n  }\n\n  public multiply(scalar: number) {\n    if (scalar === 0) {\n      return this.field.zero;\n    }\n    if (scalar === 1) {\n      return this;\n    }\n    const size = this.coefficients.length;\n    const product = new Uint8ClampedArray(size);\n    for (let i = 0; i < size; i++) {\n      product[i] = this.field.multiply(this.coefficients[i], scalar);\n    }\n\n    return new GenericGFPoly(this.field, product);\n  }\n\n  public multiplyPoly(other: GenericGFPoly): GenericGFPoly {\n    if (this.isZero() || other.isZero()) {\n      return this.field.zero;\n    }\n    const aCoefficients = this.coefficients;\n    const aLength = aCoefficients.length;\n    const bCoefficients = other.coefficients;\n    const bLength = bCoefficients.length;\n    const product = new Uint8ClampedArray(aLength + bLength - 1);\n    for (let i = 0; i < aLength; i++) {\n      const aCoeff = aCoefficients[i];\n      for (let j = 0; j < bLength; j++) {\n        product[i + j] = addOrSubtractGF(product[i + j],\n          this.field.multiply(aCoeff, bCoefficients[j]));\n      }\n    }\n    return new GenericGFPoly(this.field, product);\n  }\n\n  public multiplyByMonomial(degree: number, coefficient: number) {\n    if (degree < 0) {\n      throw new Error(\"Invalid degree less than 0\");\n    }\n    if (coefficient === 0) {\n      return this.field.zero;\n    }\n    const size = this.coefficients.length;\n    const product = new Uint8ClampedArray(size + degree);\n    for (let i = 0; i < size; i++) {\n      product[i] = this.field.multiply(this.coefficients[i], coefficient);\n    }\n    return new GenericGFPoly(this.field, product);\n  }\n\n  public evaluateAt(a: number) {\n    let result = 0;\n    if (a === 0) {\n      // Just return the x^0 coefficient\n      return this.getCoefficient(0);\n    }\n    const size = this.coefficients.length;\n    if (a === 1) {\n      // Just the sum of the coefficients\n      this.coefficients.forEach((coefficient) => {\n        result = addOrSubtractGF(result, coefficient);\n      });\n      return result;\n    }\n    result = this.coefficients[0];\n    for (let i = 1; i < size; i++) {\n      result = addOrSubtractGF(this.field.multiply(a, result), this.coefficients[i]);\n    }\n    return result;\n  }\n}\n","import GenericGFPoly from \"./GenericGFPoly\";\n\nexport function addOrSubtractGF(a: number, b: number) {\n  return a ^ b; // tslint:disable-line:no-bitwise\n}\n\nexport default class GenericGF {\n  public primitive: number;\n  public size: number;\n  public generatorBase: number;\n  public zero: GenericGFPoly;\n  public one: GenericGFPoly;\n\n  private expTable: number[];\n  private logTable: number[];\n\n  constructor(primitive: number, size: number, genBase: number) {\n    this.primitive = primitive;\n    this.size = size;\n    this.generatorBase = genBase;\n    this.expTable = new Array(this.size);\n    this.logTable = new Array(this.size);\n\n    let x = 1;\n    for (let i = 0; i < this.size; i++) {\n      this.expTable[i] = x;\n      x = x * 2;\n      if (x >= this.size) {\n        x = (x ^ this.primitive) & (this.size - 1); // tslint:disable-line:no-bitwise\n      }\n    }\n\n    for (let i = 0; i < this.size - 1; i++) {\n      this.logTable[this.expTable[i]] = i;\n    }\n    this.zero = new GenericGFPoly(this, Uint8ClampedArray.from([0]));\n    this.one = new GenericGFPoly(this, Uint8ClampedArray.from([1]));\n  }\n\n  public multiply(a: number, b: number) {\n    if (a === 0 || b === 0) {\n      return 0;\n    }\n    return this.expTable[(this.logTable[a] + this.logTable[b]) % (this.size - 1)];\n  }\n\n  public inverse(a: number) {\n    if (a === 0) {\n      throw new Error(\"Can't invert 0\");\n    }\n    return this.expTable[this.size - this.logTable[a] - 1];\n  }\n\n  public buildMonomial(degree: number, coefficient: number): GenericGFPoly {\n    if (degree < 0) {\n      throw new Error(\"Invalid monomial degree less than 0\");\n    }\n    if (coefficient === 0) {\n      return this.zero;\n    }\n    const coefficients = new Uint8ClampedArray(degree + 1);\n    coefficients[0] = coefficient;\n    return new GenericGFPoly(this, coefficients);\n  }\n\n  public log(a: number) {\n    if (a === 0) {\n      throw new Error(\"Can't take log(0)\");\n    }\n    return this.logTable[a];\n  }\n\n  public exp(a: number) {\n    return this.expTable[a];\n  }\n}\n","import GenericGF, { addOrSubtractGF } from \"./GenericGF\";\nimport GenericGFPoly from \"./GenericGFPoly\";\n\nfunction runEuclideanAlgorithm(field: GenericGF, a: GenericGFPoly, b: GenericGFPoly, R: number): GenericGFPoly[] {\n  // Assume a's degree is >= b's\n  if (a.degree() < b.degree()) {\n    [a, b] = [b, a];\n  }\n\n  let rLast = a;\n  let r = b;\n  let tLast = field.zero;\n  let t = field.one;\n\n  // Run Euclidean algorithm until r's degree is less than R/2\n  while (r.degree() >= R / 2) {\n    const rLastLast = rLast;\n    const tLastLast = tLast;\n    rLast = r;\n    tLast = t;\n\n    // Divide rLastLast by rLast, with quotient in q and remainder in r\n    if (rLast.isZero()) {\n      // Euclidean algorithm already terminated?\n      return null;\n    }\n    r = rLastLast;\n    let q = field.zero;\n    const denominatorLeadingTerm = rLast.getCoefficient(rLast.degree());\n    const dltInverse = field.inverse(denominatorLeadingTerm);\n    while (r.degree() >= rLast.degree() && !r.isZero()) {\n      const degreeDiff = r.degree() - rLast.degree();\n      const scale = field.multiply(r.getCoefficient(r.degree()), dltInverse);\n      q = q.addOrSubtract(field.buildMonomial(degreeDiff, scale));\n      r = r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff, scale));\n    }\n\n    t = q.multiplyPoly(tLast).addOrSubtract(tLastLast);\n\n    if (r.degree() >= rLast.degree()) {\n      return null;\n    }\n  }\n\n  const sigmaTildeAtZero = t.getCoefficient(0);\n  if (sigmaTildeAtZero === 0) {\n    return null;\n  }\n\n  const inverse = field.inverse(sigmaTildeAtZero);\n  return [t.multiply(inverse), r.multiply(inverse)];\n}\n\nfunction findErrorLocations(field: GenericGF, errorLocator: GenericGFPoly): number[] {\n  // This is a direct application of Chien's search\n  const numErrors = errorLocator.degree();\n  if (numErrors === 1) {\n    return [errorLocator.getCoefficient(1)];\n  }\n  const result: number[] = new Array(numErrors);\n  let errorCount = 0;\n  for (let i = 1; i < field.size && errorCount < numErrors; i++) {\n    if (errorLocator.evaluateAt(i) === 0) {\n      result[errorCount] = field.inverse(i);\n      errorCount++;\n    }\n  }\n  if (errorCount !== numErrors) {\n    return null;\n  }\n  return result;\n}\n\nfunction findErrorMagnitudes(field: GenericGF, errorEvaluator: GenericGFPoly, errorLocations: number[]): number[] {\n  // This is directly applying Forney's Formula\n  const s = errorLocations.length;\n  const result: number[] = new Array(s);\n  for (let i = 0; i < s; i++) {\n    const xiInverse = field.inverse(errorLocations[i]);\n    let denominator = 1;\n    for (let j = 0; j < s; j++) {\n      if (i !== j) {\n        denominator = field.multiply(denominator, addOrSubtractGF(1, field.multiply(errorLocations[j], xiInverse)));\n      }\n    }\n    result[i] = field.multiply(errorEvaluator.evaluateAt(xiInverse), field.inverse(denominator));\n    if (field.generatorBase !== 0) {\n      result[i] = field.multiply(result[i], xiInverse);\n    }\n  }\n  return result;\n}\n\nexport function decode(bytes: number[], twoS: number) {\n  const outputBytes = new Uint8ClampedArray(bytes.length);\n  outputBytes.set(bytes);\n\n  const field = new GenericGF(0x011D, 256, 0); // x^8 + x^4 + x^3 + x^2 + 1\n  const poly = new GenericGFPoly(field, outputBytes);\n\n  const syndromeCoefficients = new Uint8ClampedArray(twoS);\n  let error = false;\n  for (let s = 0; s < twoS; s++) {\n    const evaluation = poly.evaluateAt(field.exp(s + field.generatorBase));\n    syndromeCoefficients[syndromeCoefficients.length - 1 - s] = evaluation;\n    if (evaluation !== 0) {\n      error = true;\n    }\n  }\n  if (!error) {\n    return outputBytes;\n  }\n\n  const syndrome = new GenericGFPoly(field, syndromeCoefficients);\n\n  const sigmaOmega = runEuclideanAlgorithm(field, field.buildMonomial(twoS, 1), syndrome, twoS);\n  if (sigmaOmega === null) {\n    return null;\n  }\n\n  const errorLocations = findErrorLocations(field, sigmaOmega[0]);\n  if (errorLocations == null) {\n    return null;\n  }\n\n  const errorMagnitudes = findErrorMagnitudes(field, sigmaOmega[1], errorLocations);\n  for (let i = 0; i < errorLocations.length; i++) {\n    const position = outputBytes.length - 1 - field.log(errorLocations[i]);\n    if (position < 0) {\n      return null;\n    }\n    outputBytes[position] = addOrSubtractGF(outputBytes[position], errorMagnitudes[i]);\n  }\n\n  return outputBytes;\n}\n","export interface Version {\n  infoBits: number;\n  versionNumber: number;\n  alignmentPatternCenters: number[];\n  errorCorrectionLevels: Array<{\n    ecCodewordsPerBlock: number;\n    ecBlocks: Array<{\n      numBlocks: number;\n      dataCodewordsPerBlock: number;\n    }>\n  }>;\n}\n\nexport const VERSIONS: Version[] = [\n  {\n    infoBits: null,\n    versionNumber: 1,\n    alignmentPatternCenters: [],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 7,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 19 }],\n      },\n      {\n        ecCodewordsPerBlock: 10,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 16 }],\n      },\n      {\n        ecCodewordsPerBlock: 13,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 13 }],\n      },\n      {\n        ecCodewordsPerBlock: 17,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 9 }],\n      },\n    ],\n  },\n  {\n    infoBits: null,\n    versionNumber: 2,\n    alignmentPatternCenters: [6, 18],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 10,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 34 }],\n      },\n      {\n        ecCodewordsPerBlock: 16,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 28 }],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 22 }],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 16 }],\n      },\n    ],\n  },\n  {\n    infoBits: null,\n    versionNumber: 3,\n    alignmentPatternCenters: [6, 22],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 15,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 55 }],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 44 }],\n      },\n      {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 17 }],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 13 }],\n      },\n    ],\n  },\n  {\n    infoBits: null,\n    versionNumber: 4,\n    alignmentPatternCenters: [6, 26],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 20,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 80 }],\n      },\n      {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 32 }],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 24 }],\n      },\n      {\n        ecCodewordsPerBlock: 16,\n        ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 9 }],\n      },\n    ],\n  },\n  {\n    infoBits: null,\n    versionNumber: 5,\n    alignmentPatternCenters: [6, 30],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 108 }],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 43 }],\n      },\n      {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 15 },\n          { numBlocks: 2, dataCodewordsPerBlock: 16 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 11 },\n          { numBlocks: 2, dataCodewordsPerBlock: 12 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: null,\n    versionNumber: 6,\n    alignmentPatternCenters: [6, 34],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 68 }],\n      },\n      {\n        ecCodewordsPerBlock: 16,\n        ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 27 }],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 19 }],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 15 }],\n      },\n    ],\n  },\n  {\n    infoBits: 0x07C94,\n    versionNumber: 7,\n    alignmentPatternCenters: [6, 22, 38],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 20,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 78 }],\n      },\n      {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 31 }],\n      },\n      {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 14 },\n          { numBlocks: 4, dataCodewordsPerBlock: 15 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 13 },\n          { numBlocks: 1, dataCodewordsPerBlock: 14 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x085BC,\n    versionNumber: 8,\n    alignmentPatternCenters: [6, 24, 42],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 97 }],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 38 },\n          { numBlocks: 2, dataCodewordsPerBlock: 39 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 18 },\n          { numBlocks: 2, dataCodewordsPerBlock: 19 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 14 },\n          { numBlocks: 2, dataCodewordsPerBlock: 15 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x09A99,\n    versionNumber: 9,\n    alignmentPatternCenters: [6, 26, 46],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 116 }],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 36 },\n          { numBlocks: 2, dataCodewordsPerBlock: 37 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 20,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 16 },\n          { numBlocks: 4, dataCodewordsPerBlock: 17 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 12 },\n          { numBlocks: 4, dataCodewordsPerBlock: 13 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x0A4D3,\n    versionNumber: 10,\n    alignmentPatternCenters: [6, 28, 50],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 68 },\n          { numBlocks: 2, dataCodewordsPerBlock: 69 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 43 },\n          { numBlocks: 1, dataCodewordsPerBlock: 44 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 6, dataCodewordsPerBlock: 19 },\n          { numBlocks: 2, dataCodewordsPerBlock: 20 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 6, dataCodewordsPerBlock: 15 },\n          { numBlocks: 2, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x0BBF6,\n    versionNumber: 11,\n    alignmentPatternCenters: [6, 30, 54],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 20,\n        ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 81 }],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 1, dataCodewordsPerBlock: 50 },\n          { numBlocks: 4, dataCodewordsPerBlock: 51 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 22 },\n          { numBlocks: 4, dataCodewordsPerBlock: 23 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 12 },\n          { numBlocks: 8, dataCodewordsPerBlock: 13 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x0C762,\n    versionNumber: 12,\n    alignmentPatternCenters: [6, 32, 58],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 92 },\n          { numBlocks: 2, dataCodewordsPerBlock: 93 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 6, dataCodewordsPerBlock: 36 },\n          { numBlocks: 2, dataCodewordsPerBlock: 37 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 20 },\n          { numBlocks: 6, dataCodewordsPerBlock: 21 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 7, dataCodewordsPerBlock: 14 },\n          { numBlocks: 4, dataCodewordsPerBlock: 15 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x0D847,\n    versionNumber: 13,\n    alignmentPatternCenters: [6, 34, 62],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 107 }],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 8, dataCodewordsPerBlock: 37 },\n          { numBlocks: 1, dataCodewordsPerBlock: 38 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 8, dataCodewordsPerBlock: 20 },\n          { numBlocks: 4, dataCodewordsPerBlock: 21 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 12, dataCodewordsPerBlock: 11 },\n          { numBlocks: 4, dataCodewordsPerBlock: 12 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x0E60D,\n    versionNumber: 14,\n    alignmentPatternCenters: [6, 26, 46, 66],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 115 },\n          { numBlocks: 1, dataCodewordsPerBlock: 116 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 40 },\n          { numBlocks: 5, dataCodewordsPerBlock: 41 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 20,\n        ecBlocks: [\n          { numBlocks: 11, dataCodewordsPerBlock: 16 },\n          { numBlocks: 5, dataCodewordsPerBlock: 17 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 11, dataCodewordsPerBlock: 12 },\n          { numBlocks: 5, dataCodewordsPerBlock: 13 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x0F928,\n    versionNumber: 15,\n    alignmentPatternCenters: [6, 26, 48, 70],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 5, dataCodewordsPerBlock: 87 },\n          { numBlocks: 1, dataCodewordsPerBlock: 88 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 5, dataCodewordsPerBlock: 41 },\n          { numBlocks: 5, dataCodewordsPerBlock: 42 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 5, dataCodewordsPerBlock: 24 },\n          { numBlocks: 7, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 11, dataCodewordsPerBlock: 12 },\n          { numBlocks: 7, dataCodewordsPerBlock: 13 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x10B78,\n    versionNumber: 16,\n    alignmentPatternCenters: [6, 26, 50, 74],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 5, dataCodewordsPerBlock: 98 },\n          { numBlocks: 1, dataCodewordsPerBlock: 99 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 7, dataCodewordsPerBlock: 45 },\n          { numBlocks: 3, dataCodewordsPerBlock: 46 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 15, dataCodewordsPerBlock: 19 },\n          { numBlocks: 2, dataCodewordsPerBlock: 20 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 15 },\n          { numBlocks: 13, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x1145D,\n    versionNumber: 17,\n    alignmentPatternCenters: [6, 30, 54, 78],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 1, dataCodewordsPerBlock: 107 },\n          { numBlocks: 5, dataCodewordsPerBlock: 108 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 10, dataCodewordsPerBlock: 46 },\n          { numBlocks: 1, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 1, dataCodewordsPerBlock: 22 },\n          { numBlocks: 15, dataCodewordsPerBlock: 23 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 14 },\n          { numBlocks: 17, dataCodewordsPerBlock: 15 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x12A17,\n    versionNumber: 18,\n    alignmentPatternCenters: [6, 30, 56, 82],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 5, dataCodewordsPerBlock: 120 },\n          { numBlocks: 1, dataCodewordsPerBlock: 121 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 9, dataCodewordsPerBlock: 43 },\n          { numBlocks: 4, dataCodewordsPerBlock: 44 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 17, dataCodewordsPerBlock: 22 },\n          { numBlocks: 1, dataCodewordsPerBlock: 23 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 14 },\n          { numBlocks: 19, dataCodewordsPerBlock: 15 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x13532,\n    versionNumber: 19,\n    alignmentPatternCenters: [6, 30, 58, 86],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 113 },\n          { numBlocks: 4, dataCodewordsPerBlock: 114 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 44 },\n          { numBlocks: 11, dataCodewordsPerBlock: 45 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 17, dataCodewordsPerBlock: 21 },\n          { numBlocks: 4, dataCodewordsPerBlock: 22 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 9, dataCodewordsPerBlock: 13 },\n          { numBlocks: 16, dataCodewordsPerBlock: 14 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x149A6,\n    versionNumber: 20,\n    alignmentPatternCenters: [6, 34, 62, 90],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 107 },\n          { numBlocks: 5, dataCodewordsPerBlock: 108 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 41 },\n          { numBlocks: 13, dataCodewordsPerBlock: 42 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 15, dataCodewordsPerBlock: 24 },\n          { numBlocks: 5, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 15, dataCodewordsPerBlock: 15 },\n          { numBlocks: 10, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x15683,\n    versionNumber: 21,\n    alignmentPatternCenters: [6, 28, 50, 72, 94],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 116 },\n          { numBlocks: 4, dataCodewordsPerBlock: 117 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 42 }],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 17, dataCodewordsPerBlock: 22 },\n          { numBlocks: 6, dataCodewordsPerBlock: 23 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 19, dataCodewordsPerBlock: 16 },\n          { numBlocks: 6, dataCodewordsPerBlock: 17 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x168C9,\n    versionNumber: 22,\n    alignmentPatternCenters: [6, 26, 50, 74, 98],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 111 },\n          { numBlocks: 7, dataCodewordsPerBlock: 112 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 46 }],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 7, dataCodewordsPerBlock: 24 },\n          { numBlocks: 16, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{ numBlocks: 34, dataCodewordsPerBlock: 13 }],\n      },\n    ],\n  },\n  {\n    infoBits: 0x177EC,\n    versionNumber: 23,\n    alignmentPatternCenters: [6, 30, 54, 74, 102],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 121 },\n          { numBlocks: 5, dataCodewordsPerBlock: 122 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 47 },\n          { numBlocks: 14, dataCodewordsPerBlock: 48 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 11, dataCodewordsPerBlock: 24 },\n          { numBlocks: 14, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 16, dataCodewordsPerBlock: 15 },\n          { numBlocks: 14, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x18EC4,\n    versionNumber: 24,\n    alignmentPatternCenters: [6, 28, 54, 80, 106],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 6, dataCodewordsPerBlock: 117 },\n          { numBlocks: 4, dataCodewordsPerBlock: 118 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 6, dataCodewordsPerBlock: 45 },\n          { numBlocks: 14, dataCodewordsPerBlock: 46 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 11, dataCodewordsPerBlock: 24 },\n          { numBlocks: 16, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 30, dataCodewordsPerBlock: 16 },\n          { numBlocks: 2, dataCodewordsPerBlock: 17 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x191E1,\n    versionNumber: 25,\n    alignmentPatternCenters: [6, 32, 58, 84, 110],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 8, dataCodewordsPerBlock: 106 },\n          { numBlocks: 4, dataCodewordsPerBlock: 107 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 8, dataCodewordsPerBlock: 47 },\n          { numBlocks: 13, dataCodewordsPerBlock: 48 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 7, dataCodewordsPerBlock: 24 },\n          { numBlocks: 22, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 22, dataCodewordsPerBlock: 15 },\n          { numBlocks: 13, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x1AFAB,\n    versionNumber: 26,\n    alignmentPatternCenters: [6, 30, 58, 86, 114],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 10, dataCodewordsPerBlock: 114 },\n          { numBlocks: 2, dataCodewordsPerBlock: 115 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 19, dataCodewordsPerBlock: 46 },\n          { numBlocks: 4, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 28, dataCodewordsPerBlock: 22 },\n          { numBlocks: 6, dataCodewordsPerBlock: 23 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 33, dataCodewordsPerBlock: 16 },\n          { numBlocks: 4, dataCodewordsPerBlock: 17 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x1B08E,\n    versionNumber: 27,\n    alignmentPatternCenters: [6, 34, 62, 90, 118],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 8, dataCodewordsPerBlock: 122 },\n          { numBlocks: 4, dataCodewordsPerBlock: 123 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 22, dataCodewordsPerBlock: 45 },\n          { numBlocks: 3, dataCodewordsPerBlock: 46 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 8, dataCodewordsPerBlock: 23 },\n          { numBlocks: 26, dataCodewordsPerBlock: 24 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 12, dataCodewordsPerBlock: 15 },\n          { numBlocks: 28, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x1CC1A,\n    versionNumber: 28,\n    alignmentPatternCenters: [6, 26, 50, 74, 98, 122],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 117 },\n          { numBlocks: 10, dataCodewordsPerBlock: 118 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 45 },\n          { numBlocks: 23, dataCodewordsPerBlock: 46 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 24 },\n          { numBlocks: 31, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 11, dataCodewordsPerBlock: 15 },\n          { numBlocks: 31, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x1D33F,\n    versionNumber: 29,\n    alignmentPatternCenters: [6, 30, 54, 78, 102, 126],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 7, dataCodewordsPerBlock: 116 },\n          { numBlocks: 7, dataCodewordsPerBlock: 117 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 21, dataCodewordsPerBlock: 45 },\n          { numBlocks: 7, dataCodewordsPerBlock: 46 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 1, dataCodewordsPerBlock: 23 },\n          { numBlocks: 37, dataCodewordsPerBlock: 24 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 19, dataCodewordsPerBlock: 15 },\n          { numBlocks: 26, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x1ED75,\n    versionNumber: 30,\n    alignmentPatternCenters: [6, 26, 52, 78, 104, 130],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 5, dataCodewordsPerBlock: 115 },\n          { numBlocks: 10, dataCodewordsPerBlock: 116 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 19, dataCodewordsPerBlock: 47 },\n          { numBlocks: 10, dataCodewordsPerBlock: 48 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 15, dataCodewordsPerBlock: 24 },\n          { numBlocks: 25, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 23, dataCodewordsPerBlock: 15 },\n          { numBlocks: 25, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x1F250,\n    versionNumber: 31,\n    alignmentPatternCenters: [6, 30, 56, 82, 108, 134],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 13, dataCodewordsPerBlock: 115 },\n          { numBlocks: 3, dataCodewordsPerBlock: 116 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 46 },\n          { numBlocks: 29, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 42, dataCodewordsPerBlock: 24 },\n          { numBlocks: 1, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 23, dataCodewordsPerBlock: 15 },\n          { numBlocks: 28, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x209D5,\n    versionNumber: 32,\n    alignmentPatternCenters: [6, 34, 60, 86, 112, 138],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 115 }],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 10, dataCodewordsPerBlock: 46 },\n          { numBlocks: 23, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 10, dataCodewordsPerBlock: 24 },\n          { numBlocks: 35, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 19, dataCodewordsPerBlock: 15 },\n          { numBlocks: 35, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x216F0,\n    versionNumber: 33,\n    alignmentPatternCenters: [6, 30, 58, 86, 114, 142],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 17, dataCodewordsPerBlock: 115 },\n          { numBlocks: 1, dataCodewordsPerBlock: 116 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 14, dataCodewordsPerBlock: 46 },\n          { numBlocks: 21, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 29, dataCodewordsPerBlock: 24 },\n          { numBlocks: 19, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 11, dataCodewordsPerBlock: 15 },\n          { numBlocks: 46, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x228BA,\n    versionNumber: 34,\n    alignmentPatternCenters: [6, 34, 62, 90, 118, 146],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 13, dataCodewordsPerBlock: 115 },\n          { numBlocks: 6, dataCodewordsPerBlock: 116 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 14, dataCodewordsPerBlock: 46 },\n          { numBlocks: 23, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 44, dataCodewordsPerBlock: 24 },\n          { numBlocks: 7, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 59, dataCodewordsPerBlock: 16 },\n          { numBlocks: 1, dataCodewordsPerBlock: 17 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x2379F,\n    versionNumber: 35,\n    alignmentPatternCenters: [6, 30, 54, 78, 102, 126, 150],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 12, dataCodewordsPerBlock: 121 },\n          { numBlocks: 7, dataCodewordsPerBlock: 122 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 12, dataCodewordsPerBlock: 47 },\n          { numBlocks: 26, dataCodewordsPerBlock: 48 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 39, dataCodewordsPerBlock: 24 },\n          { numBlocks: 14, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 22, dataCodewordsPerBlock: 15 },\n          { numBlocks: 41, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x24B0B,\n    versionNumber: 36,\n    alignmentPatternCenters: [ 6, 24, 50, 76, 102, 128, 154 ],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 6, dataCodewordsPerBlock: 121 },\n          { numBlocks: 14, dataCodewordsPerBlock: 122 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 6, dataCodewordsPerBlock: 47 },\n          { numBlocks: 34, dataCodewordsPerBlock: 48 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 46, dataCodewordsPerBlock: 24 },\n          { numBlocks: 10, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 15 },\n          { numBlocks: 64, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x2542E,\n    versionNumber: 37,\n    alignmentPatternCenters: [ 6, 28, 54, 80, 106, 132, 158 ],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 17, dataCodewordsPerBlock: 122 },\n          { numBlocks: 4, dataCodewordsPerBlock: 123 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 29, dataCodewordsPerBlock: 46 },\n          { numBlocks: 14, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 49, dataCodewordsPerBlock: 24 },\n          { numBlocks: 10, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 24, dataCodewordsPerBlock: 15 },\n          { numBlocks: 46, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x26A64,\n    versionNumber: 38,\n    alignmentPatternCenters: [ 6, 32, 58, 84, 110, 136, 162 ],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 122 },\n          { numBlocks: 18, dataCodewordsPerBlock: 123 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 13, dataCodewordsPerBlock: 46 },\n          { numBlocks: 32, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 48, dataCodewordsPerBlock: 24 },\n          { numBlocks: 14, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 42, dataCodewordsPerBlock: 15 },\n          { numBlocks: 32, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x27541,\n    versionNumber: 39,\n    alignmentPatternCenters: [ 6, 26, 54, 82, 110, 138, 166 ],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 20, dataCodewordsPerBlock: 117 },\n          { numBlocks: 4, dataCodewordsPerBlock: 118 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 40, dataCodewordsPerBlock: 47 },\n          { numBlocks: 7, dataCodewordsPerBlock: 48 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 43, dataCodewordsPerBlock: 24 },\n          { numBlocks: 22, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 10, dataCodewordsPerBlock: 15 },\n          { numBlocks: 67, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x28C69,\n    versionNumber: 40,\n    alignmentPatternCenters: [ 6, 30, 58, 86, 114, 142, 170 ],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 19, dataCodewordsPerBlock: 118 },\n          { numBlocks: 6, dataCodewordsPerBlock: 119 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 18, dataCodewordsPerBlock: 47 },\n          { numBlocks: 31, dataCodewordsPerBlock: 48 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 34, dataCodewordsPerBlock: 24 },\n          { numBlocks: 34, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 20, dataCodewordsPerBlock: 15 },\n          { numBlocks: 61, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n];\n","import { BitMatrix } from \"../BitMatrix\";\nimport { Point } from \"../Point\";\nimport { decode as decodeData, DecodedQR } from \"./decodeData\";\nimport { decode as rsDecode } from \"./reedsolomon\";\nimport { Version, VERSIONS } from \"./version\";\n\n// tslint:disable:no-bitwise\nfunction numBitsDiffering(x: number, y: number) {\n  let z = x ^ y;\n  let bitCount = 0;\n  while (z) {\n    bitCount++;\n    z &= z - 1;\n  }\n  return bitCount;\n}\n\nfunction pushBit(bit: any, byte: number) {\n  return (byte << 1) | bit;\n}\n// tslint:enable:no-bitwise\n\nconst FORMAT_INFO_TABLE = [\n  { bits: 0x5412, formatInfo: { errorCorrectionLevel: 1, dataMask: 0 } },\n  { bits: 0x5125, formatInfo: { errorCorrectionLevel: 1, dataMask: 1 } },\n  { bits: 0x5E7C, formatInfo: { errorCorrectionLevel: 1, dataMask: 2 } },\n  { bits: 0x5B4B, formatInfo: { errorCorrectionLevel: 1, dataMask: 3 } },\n  { bits: 0x45F9, formatInfo: { errorCorrectionLevel: 1, dataMask: 4 } },\n  { bits: 0x40CE, formatInfo: { errorCorrectionLevel: 1, dataMask: 5 } },\n  { bits: 0x4F97, formatInfo: { errorCorrectionLevel: 1, dataMask: 6 } },\n  { bits: 0x4AA0, formatInfo: { errorCorrectionLevel: 1, dataMask: 7 } },\n  { bits: 0x77C4, formatInfo: { errorCorrectionLevel: 0, dataMask: 0 } },\n  { bits: 0x72F3, formatInfo: { errorCorrectionLevel: 0, dataMask: 1 } },\n  { bits: 0x7DAA, formatInfo: { errorCorrectionLevel: 0, dataMask: 2 } },\n  { bits: 0x789D, formatInfo: { errorCorrectionLevel: 0, dataMask: 3 } },\n  { bits: 0x662F, formatInfo: { errorCorrectionLevel: 0, dataMask: 4 } },\n  { bits: 0x6318, formatInfo: { errorCorrectionLevel: 0, dataMask: 5 } },\n  { bits: 0x6C41, formatInfo: { errorCorrectionLevel: 0, dataMask: 6 } },\n  { bits: 0x6976, formatInfo: { errorCorrectionLevel: 0, dataMask: 7 } },\n  { bits: 0x1689, formatInfo: { errorCorrectionLevel: 3, dataMask: 0 } },\n  { bits: 0x13BE, formatInfo: { errorCorrectionLevel: 3, dataMask: 1 } },\n  { bits: 0x1CE7, formatInfo: { errorCorrectionLevel: 3, dataMask: 2 } },\n  { bits: 0x19D0, formatInfo: { errorCorrectionLevel: 3, dataMask: 3 } },\n  { bits: 0x0762, formatInfo: { errorCorrectionLevel: 3, dataMask: 4 } },\n  { bits: 0x0255, formatInfo: { errorCorrectionLevel: 3, dataMask: 5 } },\n  { bits: 0x0D0C, formatInfo: { errorCorrectionLevel: 3, dataMask: 6 } },\n  { bits: 0x083B, formatInfo: { errorCorrectionLevel: 3, dataMask: 7 } },\n  { bits: 0x355F, formatInfo: { errorCorrectionLevel: 2, dataMask: 0 } },\n  { bits: 0x3068, formatInfo: { errorCorrectionLevel: 2, dataMask: 1 } },\n  { bits: 0x3F31, formatInfo: { errorCorrectionLevel: 2, dataMask: 2 } },\n  { bits: 0x3A06, formatInfo: { errorCorrectionLevel: 2, dataMask: 3 } },\n  { bits: 0x24B4, formatInfo: { errorCorrectionLevel: 2, dataMask: 4 } },\n  { bits: 0x2183, formatInfo: { errorCorrectionLevel: 2, dataMask: 5 } },\n  { bits: 0x2EDA, formatInfo: { errorCorrectionLevel: 2, dataMask: 6 } },\n  { bits: 0x2BED, formatInfo: { errorCorrectionLevel: 2, dataMask: 7 } },\n];\n\nconst DATA_MASKS = [\n  (p: Point) => ((p.y + p.x) % 2) === 0,\n  (p: Point) => (p.y % 2) === 0,\n  (p: Point) => p.x % 3 === 0,\n  (p: Point) => (p.y + p.x) % 3 === 0,\n  (p: Point) => (Math.floor(p.y / 2) + Math.floor(p.x / 3)) % 2 === 0,\n  (p: Point) => ((p.x * p.y) % 2) + ((p.x * p.y) % 3) === 0,\n  (p: Point) => ((((p.y * p.x) % 2) + (p.y * p.x) % 3) % 2) === 0,\n  (p: Point) => ((((p.y + p.x) % 2) + (p.y * p.x) % 3) % 2) === 0,\n];\n\ninterface FormatInformation {\n  errorCorrectionLevel: number;\n  dataMask: number;\n}\n\nfunction buildFunctionPatternMask(version: Version): BitMatrix {\n  const dimension = 17 + 4 * version.versionNumber;\n  const matrix = BitMatrix.createEmpty(dimension, dimension);\n\n  matrix.setRegion(0, 0, 9, 9, true); // Top left finder pattern + separator + format\n  matrix.setRegion(dimension - 8, 0, 8, 9, true); // Top right finder pattern + separator + format\n  matrix.setRegion(0, dimension - 8, 9, 8, true); // Bottom left finder pattern + separator + format\n\n  // Alignment patterns\n  for (const x of version.alignmentPatternCenters) {\n    for (const y of version.alignmentPatternCenters) {\n      if (!(x === 6 && y === 6 || x === 6 && y === dimension - 7 || x === dimension - 7 && y === 6)) {\n        matrix.setRegion(x - 2, y - 2, 5, 5, true);\n      }\n    }\n  }\n\n  matrix.setRegion(6, 9, 1, dimension - 17, true); // Vertical timing pattern\n  matrix.setRegion(9, 6, dimension - 17, 1, true); // Horizontal timing pattern\n\n  if (version.versionNumber > 6) {\n    matrix.setRegion(dimension - 11, 0, 3, 6, true); // Version info, top right\n    matrix.setRegion(0, dimension - 11, 6, 3, true); // Version info, bottom left\n  }\n\n  return matrix;\n}\n\nfunction readCodewords(matrix: BitMatrix, version: Version, formatInfo: FormatInformation) {\n  const dataMask = DATA_MASKS[formatInfo.dataMask];\n  const dimension = matrix.height;\n\n  const functionPatternMask = buildFunctionPatternMask(version);\n\n  const codewords: number[] = [];\n  let currentByte = 0;\n  let bitsRead = 0;\n\n  // Read columns in pairs, from right to left\n  let readingUp = true;\n  for (let columnIndex = dimension - 1; columnIndex > 0; columnIndex -= 2) {\n    if (columnIndex === 6) { // Skip whole column with vertical alignment pattern;\n      columnIndex--;\n    }\n    for (let i = 0; i < dimension; i++) {\n      const y = readingUp ? dimension - 1 - i : i;\n      for (let columnOffset = 0; columnOffset < 2; columnOffset++) {\n        const x = columnIndex - columnOffset;\n        if (!functionPatternMask.get(x, y)) {\n          bitsRead++;\n          let bit = matrix.get(x, y);\n          if (dataMask({y, x})) {\n            bit = !bit;\n          }\n          currentByte = pushBit(bit, currentByte);\n          if (bitsRead === 8) { // Whole bytes\n            codewords.push(currentByte);\n            bitsRead = 0;\n            currentByte = 0;\n          }\n        }\n      }\n    }\n    readingUp = !readingUp;\n  }\n  return codewords;\n}\n\nfunction readVersion(matrix: BitMatrix): Version {\n  const dimension = matrix.height;\n\n  const provisionalVersion = Math.floor((dimension - 17) / 4);\n  if (provisionalVersion <= 6) { // 6 and under dont have version info in the QR code\n    return VERSIONS[provisionalVersion - 1];\n  }\n\n  let topRightVersionBits = 0;\n  for (let y = 5; y >= 0; y--) {\n    for (let x = dimension - 9; x >= dimension - 11; x--) {\n      topRightVersionBits = pushBit(matrix.get(x, y), topRightVersionBits);\n    }\n  }\n\n  let bottomLeftVersionBits = 0;\n  for (let x = 5; x >= 0; x--) {\n    for (let y = dimension - 9; y >= dimension - 11; y--) {\n      bottomLeftVersionBits = pushBit(matrix.get(x, y), bottomLeftVersionBits);\n    }\n  }\n\n  let bestDifference = Infinity;\n  let bestVersion: Version;\n  for (const version of VERSIONS) {\n    if (version.infoBits === topRightVersionBits || version.infoBits === bottomLeftVersionBits) {\n      return version;\n    }\n\n    let difference = numBitsDiffering(topRightVersionBits, version.infoBits);\n    if (difference < bestDifference) {\n      bestVersion = version;\n      bestDifference = difference;\n    }\n\n    difference = numBitsDiffering(bottomLeftVersionBits, version.infoBits);\n    if (difference < bestDifference) {\n      bestVersion = version;\n      bestDifference = difference;\n    }\n  }\n  // We can tolerate up to 3 bits of error since no two version info codewords will\n  // differ in less than 8 bits.\n  if (bestDifference <= 3) {\n    return bestVersion;\n  }\n}\n\nfunction readFormatInformation(matrix: BitMatrix) {\n  let topLeftFormatInfoBits = 0;\n  for (let x = 0; x <= 8; x++) {\n    if (x !== 6) { // Skip timing pattern bit\n      topLeftFormatInfoBits = pushBit(matrix.get(x, 8), topLeftFormatInfoBits);\n    }\n  }\n  for (let y = 7; y >= 0; y--) {\n    if (y !== 6) { // Skip timing pattern bit\n      topLeftFormatInfoBits = pushBit(matrix.get(8, y), topLeftFormatInfoBits);\n    }\n  }\n\n  const dimension = matrix.height;\n  let topRightBottomRightFormatInfoBits = 0;\n  for (let y = dimension - 1; y >= dimension - 7; y--) { // bottom left\n    topRightBottomRightFormatInfoBits = pushBit(matrix.get(8, y), topRightBottomRightFormatInfoBits);\n  }\n  for (let x = dimension - 8; x < dimension; x++) { // top right\n    topRightBottomRightFormatInfoBits = pushBit(matrix.get(x, 8), topRightBottomRightFormatInfoBits);\n  }\n\n  let bestDifference = Infinity;\n  let bestFormatInfo = null;\n  for (const {bits, formatInfo} of FORMAT_INFO_TABLE) {\n    if (bits === topLeftFormatInfoBits || bits === topRightBottomRightFormatInfoBits) {\n      return formatInfo;\n    }\n    let difference = numBitsDiffering(topLeftFormatInfoBits, bits);\n    if (difference < bestDifference) {\n      bestFormatInfo = formatInfo;\n      bestDifference = difference;\n    }\n    if (topLeftFormatInfoBits !== topRightBottomRightFormatInfoBits) { // also try the other option\n      difference = numBitsDiffering(topRightBottomRightFormatInfoBits, bits);\n      if (difference < bestDifference) {\n        bestFormatInfo = formatInfo;\n        bestDifference = difference;\n      }\n    }\n  }\n  // Hamming distance of the 32 masked codes is 7, by construction, so <= 3 bits differing means we found a match\n  if (bestDifference <= 3) {\n    return bestFormatInfo;\n  }\n  return null;\n}\n\nfunction getDataBlocks(codewords: number[], version: Version, ecLevel: number) {\n  const ecInfo = version.errorCorrectionLevels[ecLevel];\n  const dataBlocks: Array<{\n    numDataCodewords: number;\n    codewords: number[];\n  }> = [];\n\n  let totalCodewords = 0;\n  ecInfo.ecBlocks.forEach(block => {\n    for (let i = 0; i < block.numBlocks; i++) {\n      dataBlocks.push({ numDataCodewords: block.dataCodewordsPerBlock, codewords: [] });\n      totalCodewords += block.dataCodewordsPerBlock + ecInfo.ecCodewordsPerBlock;\n    }\n  });\n\n  // In some cases the QR code will be malformed enough that we pull off more or less than we should.\n  // If we pull off less there's nothing we can do.\n  // If we pull off more we can safely truncate\n  if (codewords.length < totalCodewords) {\n    return null;\n  }\n  codewords = codewords.slice(0, totalCodewords);\n\n  const shortBlockSize = ecInfo.ecBlocks[0].dataCodewordsPerBlock;\n  // Pull codewords to fill the blocks up to the minimum size\n  for (let i = 0; i < shortBlockSize; i++) {\n    for (const dataBlock of dataBlocks) {\n      dataBlock.codewords.push(codewords.shift());\n    }\n  }\n\n  // If there are any large blocks, pull codewords to fill the last element of those\n  if (ecInfo.ecBlocks.length > 1) {\n    const smallBlockCount = ecInfo.ecBlocks[0].numBlocks;\n    const largeBlockCount = ecInfo.ecBlocks[1].numBlocks;\n    for (let i = 0; i < largeBlockCount; i++) {\n      dataBlocks[smallBlockCount + i].codewords.push(codewords.shift());\n    }\n  }\n\n  // Add the rest of the codewords to the blocks. These are the error correction codewords.\n  while (codewords.length > 0) {\n    for (const dataBlock of dataBlocks) {\n      dataBlock.codewords.push(codewords.shift());\n    }\n  }\n\n  return dataBlocks;\n}\n\nfunction decodeMatrix(matrix: BitMatrix) {\n  const version = readVersion(matrix);\n  if (!version) {\n    return null;\n  }\n\n  const formatInfo = readFormatInformation(matrix);\n  if (!formatInfo) {\n    return null;\n  }\n\n  const codewords = readCodewords(matrix, version, formatInfo);\n  const dataBlocks = getDataBlocks(codewords, version, formatInfo.errorCorrectionLevel);\n  if (!dataBlocks) {\n    return null;\n  }\n\n  // Count total number of data bytes\n  const totalBytes = dataBlocks.reduce((a, b) => a + b.numDataCodewords, 0);\n  const resultBytes = new Uint8ClampedArray(totalBytes);\n\n  let resultIndex = 0;\n  for (const dataBlock of dataBlocks) {\n    const correctedBytes = rsDecode(dataBlock.codewords, dataBlock.codewords.length - dataBlock.numDataCodewords);\n    if (!correctedBytes) {\n      return null;\n    }\n    for (let i = 0; i < dataBlock.numDataCodewords; i++) {\n      resultBytes[resultIndex++] = correctedBytes[i];\n    }\n  }\n\n  try {\n    return decodeData(resultBytes, version.versionNumber);\n  } catch {\n    return null;\n  }\n}\n\nexport function decode(matrix: BitMatrix): DecodedQR {\n  if (matrix == null) {\n    return null;\n  }\n  const result = decodeMatrix(matrix);\n  if (result) {\n    return result;\n  }\n  // Decoding didn't work, try mirroring the QR across the topLeft -> bottomRight line.\n  for (let x = 0; x < matrix.width; x++) {\n    for (let y = x + 1; y < matrix.height; y++) {\n      if (matrix.get(x, y) !== matrix.get(y, x)) {\n        matrix.set(x, y, !matrix.get(x, y));\n        matrix.set(y, x, !matrix.get(y, x));\n      }\n    }\n  }\n  return decodeMatrix(matrix);\n}\n","import {BitMatrix} from \"../BitMatrix\";\nimport {Point, QRLocation} from \"../locator\";\n\ninterface PerspectiveTransform {\n  a11: number;\n  a21: number;\n  a31: number;\n  a12: number;\n  a22: number;\n  a32: number;\n  a13: number;\n  a23: number;\n  a33: number;\n}\n\nfunction squareToQuadrilateral(p1: Point, p2: Point, p3: Point, p4: Point): PerspectiveTransform {\n  const dx3 = p1.x - p2.x + p3.x - p4.x;\n  const dy3 = p1.y - p2.y + p3.y - p4.y;\n  if (dx3 === 0 && dy3 === 0) { // Affine\n    return {\n      a11: p2.x - p1.x,\n      a12: p2.y - p1.y,\n      a13: 0,\n      a21: p3.x - p2.x,\n      a22: p3.y - p2.y,\n      a23: 0,\n      a31: p1.x,\n      a32: p1.y,\n      a33: 1,\n    };\n  } else {\n    const dx1 = p2.x - p3.x;\n    const dx2 = p4.x - p3.x;\n    const dy1 = p2.y - p3.y;\n    const dy2 = p4.y - p3.y;\n    const denominator = dx1 * dy2 - dx2 * dy1;\n    const a13 = (dx3 * dy2 - dx2 * dy3) / denominator;\n    const a23 = (dx1 * dy3 - dx3 * dy1) / denominator;\n    return {\n      a11: p2.x - p1.x + a13 * p2.x,\n      a12: p2.y - p1.y + a13 * p2.y,\n      a13,\n      a21: p4.x - p1.x + a23 * p4.x,\n      a22: p4.y - p1.y + a23 * p4.y,\n      a23,\n      a31: p1.x,\n      a32: p1.y,\n      a33: 1,\n    };\n  }\n}\n\nfunction quadrilateralToSquare(p1: Point, p2: Point, p3: Point, p4: Point): PerspectiveTransform {\n  // Here, the adjoint serves as the inverse:\n  const sToQ = squareToQuadrilateral(p1, p2, p3, p4);\n  return {\n    a11: sToQ.a22 * sToQ.a33 - sToQ.a23 * sToQ.a32,\n    a12: sToQ.a13 * sToQ.a32 - sToQ.a12 * sToQ.a33,\n    a13: sToQ.a12 * sToQ.a23 - sToQ.a13 * sToQ.a22,\n    a21: sToQ.a23 * sToQ.a31 - sToQ.a21 * sToQ.a33,\n    a22: sToQ.a11 * sToQ.a33 - sToQ.a13 * sToQ.a31,\n    a23: sToQ.a13 * sToQ.a21 - sToQ.a11 * sToQ.a23,\n    a31: sToQ.a21 * sToQ.a32 - sToQ.a22 * sToQ.a31,\n    a32: sToQ.a12 * sToQ.a31 - sToQ.a11 * sToQ.a32,\n    a33: sToQ.a11 * sToQ.a22 - sToQ.a12 * sToQ.a21,\n  };\n}\n\nfunction times(a: PerspectiveTransform, b: PerspectiveTransform): PerspectiveTransform {\n  return {\n    a11: a.a11 * b.a11 + a.a21 * b.a12 + a.a31 * b.a13,\n    a12: a.a12 * b.a11 + a.a22 * b.a12 + a.a32 * b.a13,\n    a13: a.a13 * b.a11 + a.a23 * b.a12 + a.a33 * b.a13,\n    a21: a.a11 * b.a21 + a.a21 * b.a22 + a.a31 * b.a23,\n    a22: a.a12 * b.a21 + a.a22 * b.a22 + a.a32 * b.a23,\n    a23: a.a13 * b.a21 + a.a23 * b.a22 + a.a33 * b.a23,\n    a31: a.a11 * b.a31 + a.a21 * b.a32 + a.a31 * b.a33,\n    a32: a.a12 * b.a31 + a.a22 * b.a32 + a.a32 * b.a33,\n    a33: a.a13 * b.a31 + a.a23 * b.a32 + a.a33 * b.a33,\n  };\n}\n\nexport function extract(image: BitMatrix, location: QRLocation) {\n  const qToS = quadrilateralToSquare(\n    {x: 3.5, y: 3.5},\n    {x: location.dimension - 3.5, y: 3.5},\n    {x: location.dimension - 6.5, y: location.dimension - 6.5},\n    {x: 3.5, y: location.dimension - 3.5},\n  );\n  const sToQ = squareToQuadrilateral(location.topLeft, location.topRight, location.alignmentPattern, location.bottomLeft);\n  const transform = times(sToQ, qToS);\n\n  const matrix = BitMatrix.createEmpty(location.dimension, location.dimension);\n  const mappingFunction = (x: number, y: number) => {\n    const denominator = transform.a13 * x + transform.a23 * y + transform.a33;\n    return {\n      x: (transform.a11 * x + transform.a21 * y + transform.a31) / denominator,\n      y: (transform.a12 * x + transform.a22 * y + transform.a32) / denominator,\n    };\n  };\n\n  for (let y = 0; y < location.dimension; y++) {\n    for (let x = 0; x < location.dimension; x++) {\n      const xValue = x + 0.5;\n      const yValue = y + 0.5;\n      const sourcePixel = mappingFunction(xValue, yValue);\n      matrix.set(x, y, image.get(Math.floor(sourcePixel.x), Math.floor(sourcePixel.y)));\n    }\n  }\n\n  return {\n    matrix,\n    mappingFunction,\n  };\n}\n","import { BitMatrix } from \"../BitMatrix\";\n\nconst MAX_FINDERPATTERNS_TO_SEARCH = 5;\nconst MIN_QUAD_RATIO = 0.5;\nconst MAX_QUAD_RATIO = 1.5;\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nexport interface QRLocation {\n  topRight: Point;\n  bottomLeft: Point;\n  topLeft: Point;\n  alignmentPattern: Point;\n  dimension: number;\n}\n\nconst distance = (a: Point, b: Point) => Math.sqrt((b.x - a.x) ** 2 + (b.y - a.y) ** 2);\n\nfunction sum(values: number[]) {\n  return values.reduce((a, b) => a + b);\n}\n\n// Takes three finder patterns and organizes them into topLeft, topRight, etc\nfunction reorderFinderPatterns(pattern1: Point, pattern2: Point, pattern3: Point) {\n  // Find distances between pattern centers\n  const oneTwoDistance = distance(pattern1, pattern2);\n  const twoThreeDistance = distance(pattern2, pattern3);\n  const oneThreeDistance = distance(pattern1, pattern3);\n\n  let bottomLeft: Point;\n  let topLeft: Point;\n  let topRight: Point;\n\n  // Assume one closest to other two is B; A and C will just be guesses at first\n  if (twoThreeDistance >= oneTwoDistance && twoThreeDistance >= oneThreeDistance) {\n    [bottomLeft, topLeft, topRight] = [pattern2, pattern1, pattern3];\n  } else if (oneThreeDistance >= twoThreeDistance && oneThreeDistance >= oneTwoDistance) {\n    [bottomLeft, topLeft, topRight] = [pattern1, pattern2, pattern3];\n  } else {\n    [bottomLeft, topLeft, topRight] = [pattern1, pattern3, pattern2];\n  }\n\n  // Use cross product to figure out whether bottomLeft (A) and topRight (C) are correct or flipped in relation to topLeft (B)\n  // This asks whether BC x BA has a positive z component, which is the arrangement we want. If it's negative, then\n  // we've got it flipped around and should swap topRight and bottomLeft.\n  if (((topRight.x - topLeft.x) * (bottomLeft.y - topLeft.y)) - ((topRight.y - topLeft.y) * (bottomLeft.x - topLeft.x)) < 0) {\n    [bottomLeft, topRight] = [topRight, bottomLeft];\n  }\n\n  return { bottomLeft, topLeft, topRight };\n}\n\n// Computes the dimension (number of modules on a side) of the QR Code based on the position of the finder patterns\nfunction computeDimension(topLeft: Point, topRight: Point, bottomLeft: Point, matrix: BitMatrix) {\n  const moduleSize = (\n    sum(countBlackWhiteRun(topLeft, bottomLeft, matrix, 5)) / 7 + // Divide by 7 since the ratio is 1:1:3:1:1\n    sum(countBlackWhiteRun(topLeft, topRight, matrix, 5)) / 7 +\n    sum(countBlackWhiteRun(bottomLeft, topLeft, matrix, 5)) / 7 +\n    sum(countBlackWhiteRun(topRight, topLeft, matrix, 5)) / 7\n  ) / 4;\n\n  if (moduleSize < 1) {\n    throw new Error(\"Invalid module size\");\n  }\n\n  const topDimension = Math.round(distance(topLeft, topRight) / moduleSize);\n  const sideDimension = Math.round(distance(topLeft, bottomLeft) / moduleSize);\n  let dimension = Math.floor((topDimension + sideDimension) / 2) + 7;\n  switch (dimension % 4) {\n    case 0:\n      dimension++;\n      break;\n    case 2:\n      dimension--;\n      break;\n  }\n  return { dimension, moduleSize };\n}\n\n// Takes an origin point and an end point and counts the sizes of the black white run from the origin towards the end point.\n// Returns an array of elements, representing the pixel size of the black white run.\n// Uses a variant of http://en.wikipedia.org/wiki/Bresenham's_line_algorithm\nfunction countBlackWhiteRunTowardsPoint(origin: Point, end: Point, matrix: BitMatrix, length: number) {\n  const switchPoints: Point[] = [{x: Math.floor(origin.x), y: Math.floor(origin.y)}];\n  const steep = Math.abs(end.y - origin.y) > Math.abs(end.x - origin.x);\n\n  let fromX: number;\n  let fromY: number;\n  let toX: number;\n  let toY: number;\n  if (steep) {\n    fromX = Math.floor(origin.y);\n    fromY = Math.floor(origin.x);\n    toX = Math.floor(end.y);\n    toY = Math.floor(end.x);\n  } else {\n    fromX = Math.floor(origin.x);\n    fromY = Math.floor(origin.y);\n    toX = Math.floor(end.x);\n    toY = Math.floor(end.y);\n  }\n\n  const dx = Math.abs(toX - fromX);\n  const dy = Math.abs(toY - fromY);\n  let error = Math.floor(-dx / 2);\n  const xStep = fromX < toX ? 1 : -1;\n  const yStep = fromY < toY ? 1 : -1;\n\n  let currentPixel = true;\n  // Loop up until x == toX, but not beyond\n  for (let x = fromX, y = fromY; x !== toX + xStep; x += xStep) {\n    // Does current pixel mean we have moved white to black or vice versa?\n    // Scanning black in state 0,2 and white in state 1, so if we find the wrong\n    // color, advance to next state or end if we are in state 2 already\n    const realX = steep ? y : x;\n    const realY = steep ? x : y;\n    if (matrix.get(realX, realY) !== currentPixel) {\n      currentPixel = !currentPixel;\n      switchPoints.push({x: realX, y: realY});\n      if (switchPoints.length === length + 1) {\n        break;\n      }\n    }\n    error += dy;\n    if (error > 0) {\n      if (y === toY) {\n        break;\n      }\n      y += yStep;\n      error -= dx;\n    }\n  }\n  const distances: number[] = [];\n  for (let i = 0; i < length; i++) {\n    if (switchPoints[i] && switchPoints[i + 1]) {\n      distances.push(distance(switchPoints[i], switchPoints[i + 1]));\n    } else {\n      distances.push(0);\n    }\n  }\n  return distances;\n}\n\n// Takes an origin point and an end point and counts the sizes of the black white run in the origin point\n// along the line that intersects with the end point. Returns an array of elements, representing the pixel sizes\n// of the black white run. Takes a length which represents the number of switches from black to white to look for.\nfunction countBlackWhiteRun(origin: Point, end: Point, matrix: BitMatrix, length: number) {\n  const rise = end.y - origin.y;\n  const run = end.x - origin.x;\n\n  const towardsEnd = countBlackWhiteRunTowardsPoint(origin, end, matrix, Math.ceil(length / 2));\n  const awayFromEnd = countBlackWhiteRunTowardsPoint(origin, {x: origin.x - run, y: origin.y - rise}, matrix, Math.ceil(length / 2));\n\n  const middleValue = towardsEnd.shift() + awayFromEnd.shift() - 1; // Substract one so we don't double count a pixel\n  return awayFromEnd.concat(middleValue).concat(...towardsEnd);\n}\n\n// Takes in a black white run and an array of expected ratios. Returns the average size of the run as well as the \"error\" -\n// that is the amount the run diverges from the expected ratio\nfunction scoreBlackWhiteRun(sequence: number[], ratios: number[]) {\n  const averageSize = sum(sequence) / sum(ratios);\n  let error = 0;\n  ratios.forEach((ratio, i) => {\n    error += (sequence[i] - ratio * averageSize) ** 2;\n  });\n\n  return { averageSize, error };\n}\n\n// Takes an X,Y point and an array of sizes and scores the point against those ratios.\n// For example for a finder pattern takes the ratio list of 1:1:3:1:1 and checks horizontal, vertical and diagonal ratios\n// against that.\nfunction scorePattern(point: Point, ratios: number[], matrix: BitMatrix) {\n  try {\n    const horizontalRun = countBlackWhiteRun(point, {x: -1, y: point.y}, matrix, ratios.length);\n    const verticalRun = countBlackWhiteRun(point, {x: point.x, y: -1}, matrix, ratios.length);\n\n    const topLeftPoint = {\n      x: Math.max(0, point.x - point.y) - 1,\n      y: Math.max(0, point.y - point.x) - 1,\n    };\n    const topLeftBottomRightRun = countBlackWhiteRun(point, topLeftPoint, matrix, ratios.length);\n\n    const bottomLeftPoint = {\n      x: Math.min(matrix.width, point.x + point.y) + 1,\n      y: Math.min(matrix.height, point.y + point.x) + 1,\n    };\n    const bottomLeftTopRightRun = countBlackWhiteRun(point, bottomLeftPoint, matrix, ratios.length);\n\n    const horzError = scoreBlackWhiteRun(horizontalRun, ratios);\n    const vertError = scoreBlackWhiteRun(verticalRun, ratios);\n    const diagDownError = scoreBlackWhiteRun(topLeftBottomRightRun, ratios);\n    const diagUpError = scoreBlackWhiteRun(bottomLeftTopRightRun, ratios);\n\n    const ratioError = Math.sqrt(horzError.error * horzError.error +\n      vertError.error * vertError.error +\n      diagDownError.error * diagDownError.error +\n      diagUpError.error * diagUpError.error);\n\n    const avgSize = (horzError.averageSize + vertError.averageSize + diagDownError.averageSize + diagUpError.averageSize) / 4;\n\n    const sizeError = ((horzError.averageSize - avgSize) ** 2 +\n      (vertError.averageSize - avgSize) ** 2 +\n      (diagDownError.averageSize - avgSize) ** 2 +\n      (diagUpError.averageSize - avgSize) ** 2) / avgSize;\n    return ratioError + sizeError;\n  } catch {\n    return Infinity;\n  }\n}\n\nfunction recenterLocation(matrix: BitMatrix, p: Point): Point {\n  let leftX = Math.round(p.x);\n  while (matrix.get(leftX, Math.round(p.y))) {\n    leftX--;\n  }\n  let rightX = Math.round(p.x);\n  while (matrix.get(rightX, Math.round(p.y))) {\n    rightX++;\n  }\n  const x = (leftX + rightX) / 2;\n\n  let topY = Math.round(p.y);\n  while (matrix.get(Math.round(x), topY)) {\n    topY--;\n  }\n  let bottomY = Math.round(p.y);\n  while (matrix.get(Math.round(x), bottomY)) {\n    bottomY++;\n  }\n  const y = (topY + bottomY) / 2;\n\n  return { x, y };\n}\n\ninterface Quad {\n  top: {\n    startX: number;\n    endX: number;\n    y: number;\n  };\n  bottom: {\n    startX: number;\n    endX: number;\n    y: number;\n  };\n}\n\nexport function locate(matrix: BitMatrix): QRLocation[] {\n  const finderPatternQuads: Quad[] = [];\n  let activeFinderPatternQuads: Quad[] = [];\n  const alignmentPatternQuads: Quad[] = [];\n  let activeAlignmentPatternQuads: Quad[] = [];\n\n  for (let y = 0; y <= matrix.height; y++) {\n    let length = 0;\n    let lastBit = false;\n    let scans = [0, 0, 0, 0, 0];\n\n    for (let x = -1; x <= matrix.width; x++) {\n      const v = matrix.get(x, y);\n      if (v === lastBit) {\n        length++;\n      } else {\n        scans = [scans[1], scans[2], scans[3], scans[4], length];\n        length = 1;\n        lastBit = v;\n\n        // Do the last 5 color changes ~ match the expected ratio for a finder pattern? 1:1:3:1:1 of b:w:b:w:b\n        const averageFinderPatternBlocksize = sum(scans) / 7;\n        const validFinderPattern =\n          Math.abs(scans[0] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n          Math.abs(scans[1] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n          Math.abs(scans[2] - 3 * averageFinderPatternBlocksize) < 3 * averageFinderPatternBlocksize &&\n          Math.abs(scans[3] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n          Math.abs(scans[4] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n          !v; // And make sure the current pixel is white since finder patterns are bordered in white\n\n        // Do the last 3 color changes ~ match the expected ratio for an alignment pattern? 1:1:1 of w:b:w\n        const averageAlignmentPatternBlocksize = sum(scans.slice(-3)) / 3;\n        const validAlignmentPattern =\n          Math.abs(scans[2] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize &&\n          Math.abs(scans[3] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize &&\n          Math.abs(scans[4] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize &&\n          v; // Is the current pixel black since alignment patterns are bordered in black\n\n        if (validFinderPattern) {\n          // Compute the start and end x values of the large center black square\n          const endX = x - scans[3] - scans[4];\n          const startX = endX - scans[2];\n\n          const line = { startX, endX, y };\n          // Is there a quad directly above the current spot? If so, extend it with the new line. Otherwise, create a new quad with\n          // that line as the starting point.\n          const matchingQuads = activeFinderPatternQuads.filter(q =>\n            (startX >= q.bottom.startX && startX <= q.bottom.endX) ||\n            (endX >= q.bottom.startX && startX <= q.bottom.endX) ||\n            (startX <= q.bottom.startX && endX >= q.bottom.endX && (\n              (scans[2] / (q.bottom.endX - q.bottom.startX)) < MAX_QUAD_RATIO &&\n              (scans[2] / (q.bottom.endX - q.bottom.startX)) > MIN_QUAD_RATIO\n            )),\n          );\n          if (matchingQuads.length > 0) {\n            matchingQuads[0].bottom = line;\n          } else {\n            activeFinderPatternQuads.push({ top: line, bottom: line });\n          }\n        }\n        if (validAlignmentPattern) {\n          // Compute the start and end x values of the center black square\n          const endX = x - scans[4];\n          const startX = endX - scans[3];\n\n          const line = { startX, y, endX };\n          // Is there a quad directly above the current spot? If so, extend it with the new line. Otherwise, create a new quad with\n          // that line as the starting point.\n          const matchingQuads = activeAlignmentPatternQuads.filter(q =>\n            (startX >= q.bottom.startX && startX <= q.bottom.endX) ||\n            (endX >= q.bottom.startX && startX <= q.bottom.endX) ||\n            (startX <= q.bottom.startX && endX >= q.bottom.endX && (\n              (scans[2] / (q.bottom.endX - q.bottom.startX)) < MAX_QUAD_RATIO &&\n              (scans[2] / (q.bottom.endX - q.bottom.startX)) > MIN_QUAD_RATIO\n            )),\n          );\n          if (matchingQuads.length > 0) {\n            matchingQuads[0].bottom = line;\n          } else {\n            activeAlignmentPatternQuads.push({ top: line, bottom: line });\n          }\n        }\n      }\n    }\n    finderPatternQuads.push(...activeFinderPatternQuads.filter(q => q.bottom.y !== y && q.bottom.y - q.top.y >= 2));\n    activeFinderPatternQuads = activeFinderPatternQuads.filter(q => q.bottom.y === y);\n\n    alignmentPatternQuads.push(...activeAlignmentPatternQuads.filter(q => q.bottom.y !== y));\n    activeAlignmentPatternQuads = activeAlignmentPatternQuads.filter(q => q.bottom.y === y);\n\n  }\n\n  finderPatternQuads.push(...activeFinderPatternQuads.filter(q => q.bottom.y - q.top.y >= 2));\n  alignmentPatternQuads.push(...activeAlignmentPatternQuads);\n\n  // Refactored from cozmo/jsQR to (hopefully) circumvent an issue in Safari 13+ on both Mac and iOS (also including\n  // iOS Chrome and other Safari iOS derivatives). Safari was very occasionally and apparently not deterministically\n  // throwing a \"RangeError: Array size is not a small enough positive integer.\" exception seemingly within the second\n  // .map of the original code (here the second for-loop). This second .map contained a nested .map call over the same\n  // array instance which was the chained result from previous calls to .map, .filter and .sort which potentially caused\n  // this bug in Safari?\n  // Also see https://github.com/cozmo/jsQR/issues/157 and https://bugs.webkit.org/show_bug.cgi?id=211619#c3\n  const scoredFinderPatternPositions: Array<Point & { size: number, score: number }> = [];\n  for (const quad of finderPatternQuads) {\n    if (quad.bottom.y - quad.top.y < 2) {\n      // All quads must be at least 2px tall since the center square is larger than a block\n      continue;\n    }\n\n    // calculate quad center\n    const x = (quad.top.startX + quad.top.endX + quad.bottom.startX + quad.bottom.endX) / 4;\n    const y = (quad.top.y + quad.bottom.y + 1) / 2;\n    if (!matrix.get(Math.round(x), Math.round(y))) {\n      continue;\n    }\n\n    const lengths = [quad.top.endX - quad.top.startX, quad.bottom.endX - quad.bottom.startX, quad.bottom.y - quad.top.y + 1];\n    const size = sum(lengths) / lengths.length;\n    // Initial scoring of finder pattern quads by looking at their ratios, not taking into account position\n    const score = scorePattern({x: Math.round(x), y: Math.round(y)}, [1, 1, 3, 1, 1], matrix);\n    scoredFinderPatternPositions.push({ score, x, y, size });\n  }\n  if (scoredFinderPatternPositions.length < 3) {\n    // A QR code has 3 finder patterns, therefore we need at least 3 candidates.\n    return null;\n  }\n  scoredFinderPatternPositions.sort((a, b) => a.score - b.score);\n\n  // Now take the top finder pattern options and try to find 2 other options with a similar size.\n  const finderPatternGroups: Array<{ points: [Point, Point, Point], score: number }> = [];\n  for (let i = 0; i < Math.min(scoredFinderPatternPositions.length, MAX_FINDERPATTERNS_TO_SEARCH); ++i) {\n    const point = scoredFinderPatternPositions[i];\n    const otherPoints: typeof scoredFinderPatternPositions = [];\n\n    for (const otherPoint of scoredFinderPatternPositions) {\n      if (otherPoint === point) {\n        continue;\n      }\n      otherPoints.push({\n        ...otherPoint,\n        score: otherPoint.score + ((otherPoint.size - point.size) ** 2) / point.size, // score similarity of sizes\n      });\n    }\n    otherPoints.sort((a, b) => a.score - b.score);\n\n    finderPatternGroups.push({\n      points: [point, otherPoints[0], otherPoints[1]], // note that otherPoints.length >= 2 as scoredFinderPatternPositions.length >= 3\n      score: point.score + otherPoints[0].score + otherPoints[1].score, // total combined score of the three points in the group\n    });\n  }\n  finderPatternGroups.sort((a, b) => a.score - b.score);\n  const bestFinderPatternGroup = finderPatternGroups[0];\n\n  const { topRight, topLeft, bottomLeft } = reorderFinderPatterns(...bestFinderPatternGroup.points);\n  const alignment = findAlignmentPattern(matrix, alignmentPatternQuads, topRight, topLeft, bottomLeft);\n  const result: QRLocation[] = [];\n  if (alignment) {\n    result.push({\n      alignmentPattern: { x: alignment.alignmentPattern.x, y: alignment.alignmentPattern.y },\n      bottomLeft: {x: bottomLeft.x, y: bottomLeft.y },\n      dimension: alignment.dimension,\n      topLeft: {x: topLeft.x, y: topLeft.y },\n      topRight: {x: topRight.x, y: topRight.y },\n    });\n  }\n\n  // We normally use the center of the quads as the location of the tracking points, which is optimal for most cases and will account\n  // for a skew in the image. However, In some cases, a slight skew might not be real and instead be caused by image compression\n  // errors and/or low resolution. For those cases, we'd be better off centering the point exactly in the middle of the black area. We\n  // compute and return the location data for the naively centered points as it is little additional work and allows for multiple\n  // attempts at decoding harder images.\n  const midTopRight = recenterLocation(matrix, topRight);\n  const midTopLeft = recenterLocation(matrix, topLeft);\n  const midBottomLeft = recenterLocation(matrix, bottomLeft);\n  const centeredAlignment = findAlignmentPattern(matrix, alignmentPatternQuads, midTopRight, midTopLeft, midBottomLeft);\n  if (centeredAlignment) {\n    result.push({\n      alignmentPattern: { x: centeredAlignment.alignmentPattern.x, y: centeredAlignment.alignmentPattern.y },\n      bottomLeft: { x: midBottomLeft.x, y: midBottomLeft. y },\n      topLeft: { x: midTopLeft.x, y: midTopLeft. y },\n      topRight: { x: midTopRight.x, y: midTopRight. y },\n      dimension: centeredAlignment.dimension,\n    });\n  }\n\n  if (result.length === 0) {\n    return null;\n  }\n\n  return result;\n}\n\nfunction findAlignmentPattern(matrix: BitMatrix, alignmentPatternQuads: Quad[], topRight: Point, topLeft: Point, bottomLeft: Point) {\n  // Now that we've found the three finder patterns we can determine the blockSize and the size of the QR code.\n  // We'll use these to help find the alignment pattern but also later when we do the extraction.\n  let dimension: number;\n  let moduleSize: number;\n  try {\n    ({ dimension, moduleSize } = computeDimension(topLeft, topRight, bottomLeft, matrix));\n  } catch (e) {\n    return null;\n  }\n\n  // Now find the alignment pattern\n  const bottomRightFinderPattern = { // Best guess at where a bottomRight finder pattern would be\n    x: topRight.x - topLeft.x + bottomLeft.x,\n    y: topRight.y - topLeft.y + bottomLeft.y,\n  };\n  const modulesBetweenFinderPatterns = ((distance(topLeft, bottomLeft) + distance(topLeft, topRight)) / 2 / moduleSize);\n  const correctionToTopLeft = 1 - (3 / modulesBetweenFinderPatterns);\n  const expectedAlignmentPattern = {\n    x: topLeft.x + correctionToTopLeft * (bottomRightFinderPattern.x - topLeft.x),\n    y: topLeft.y + correctionToTopLeft * (bottomRightFinderPattern.y - topLeft.y),\n  };\n\n  const alignmentPatterns = alignmentPatternQuads\n    .map(q => {\n      const x = (q.top.startX + q.top.endX + q.bottom.startX + q.bottom.endX) / 4;\n      const y = (q.top.y + q.bottom.y + 1) / 2;\n      if (!matrix.get(Math.floor(x), Math.floor(y))) {\n        return;\n      }\n\n      const sizeScore = scorePattern({x: Math.floor(x), y: Math.floor(y)}, [1, 1, 1], matrix);\n      const score = sizeScore + distance({x, y}, expectedAlignmentPattern);\n      return { x, y, score };\n    })\n    .filter(v => !!v)\n    .sort((a, b) => a.score - b.score);\n\n  // If there are less than 15 modules between finder patterns it's a version 1 QR code and as such has no alignmemnt pattern\n  // so we can only use our best guess.\n  const alignmentPattern = modulesBetweenFinderPatterns >= 15 && alignmentPatterns.length ? alignmentPatterns[0] : expectedAlignmentPattern;\n\n  return { alignmentPattern, dimension };\n}\n","import {binarize} from \"./binarizer\";\nimport {BitMatrix} from \"./BitMatrix\";\nimport {Chunks} from \"./decoder/decodeData\";\nimport {decode} from \"./decoder/decoder\";\nimport { Version } from \"./decoder/version\";\nimport {extract} from \"./extractor\";\nimport {locate, Point} from \"./locator\";\n\nexport interface QRCode {\n  binaryData: number[];\n  data: string;\n  chunks: Chunks;\n  version: number;\n  location: {\n    topRightCorner: Point;\n    topLeftCorner: Point;\n    bottomRightCorner: Point;\n    bottomLeftCorner: Point;\n\n    topRightFinderPattern: Point;\n    topLeftFinderPattern: Point;\n    bottomLeftFinderPattern: Point;\n\n    bottomRightAlignmentPattern?: Point;\n  };\n  matrix: BitMatrix;\n}\n\nfunction scan(matrix: BitMatrix): QRCode | null {\n  const locations = locate(matrix);\n  if (!locations) {\n    return null;\n  }\n\n  for (const location of locations) {\n    const extracted = extract(matrix, location);\n    const decoded = decode(extracted.matrix);\n    if (decoded) {\n      return {\n        binaryData: decoded.bytes,\n        data: decoded.text,\n        chunks: decoded.chunks,\n        version: decoded.version,\n        location: {\n          topRightCorner: extracted.mappingFunction(location.dimension, 0),\n          topLeftCorner: extracted.mappingFunction(0, 0),\n          bottomRightCorner: extracted.mappingFunction(location.dimension, location.dimension),\n          bottomLeftCorner: extracted.mappingFunction(0, location.dimension),\n\n          topRightFinderPattern: location.topRight,\n          topLeftFinderPattern: location.topLeft,\n          bottomLeftFinderPattern: location.bottomLeft,\n\n          bottomRightAlignmentPattern: location.alignmentPattern,\n        },\n        matrix: extracted.matrix,\n      };\n    }\n  }\n  return null;\n}\n\nexport interface Options {\n  inversionAttempts?: \"dontInvert\" | \"onlyInvert\" | \"attemptBoth\" | \"invertFirst\";\n  greyScaleWeights?: GreyscaleWeights;\n  canOverwriteImage?: boolean;\n}\n\nexport interface GreyscaleWeights {\n  red: number;\n  green: number;\n  blue: number;\n  useIntegerApproximation?: boolean;\n}\n\nconst defaultOptions: Options = {\n  inversionAttempts: \"attemptBoth\",\n  greyScaleWeights: {\n    red: 0.2126,\n    green: 0.7152,\n    blue: 0.0722,\n    useIntegerApproximation: false,\n  },\n  canOverwriteImage: true,\n};\n\nfunction mergeObject(target: any, src: any) {\n  Object.keys(src).forEach(opt => { // Sad implementation of Object.assign since we target es5 not es6\n    target[opt] = src[opt];\n  });\n}\n\nfunction jsQR(data: Uint8ClampedArray, width: number, height: number, providedOptions: Options = {}): QRCode | null {\n  const options = Object.create(null);\n  mergeObject(options, defaultOptions);\n  mergeObject(options, providedOptions);\n\n  const tryInvertedFirst = options.inversionAttempts === \"onlyInvert\" || options.inversionAttempts === \"invertFirst\";\n  const shouldInvert = options.inversionAttempts === \"attemptBoth\" || tryInvertedFirst;\n  const {binarized, inverted} = binarize(data, width, height, shouldInvert, options.greyScaleWeights,\n      options.canOverwriteImage);\n  let result = scan(tryInvertedFirst ? inverted : binarized);\n  if (!result && (options.inversionAttempts === \"attemptBoth\" || options.inversionAttempts === \"invertFirst\")) {\n    result = scan(tryInvertedFirst ? binarized : inverted);\n  }\n  return result;\n}\n\n(jsQR as any).default = jsQR;\nexport default jsQR;\n","// @ts-ignore jsqr-es6 does not provide types currently\r\nimport jsQR from '../node_modules/jsqr-es6/dist/jsQR.js';\r\n\r\ntype GrayscaleWeights = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    useIntegerApproximation: boolean,\r\n};\r\n\r\nlet inversionAttempts: 'dontInvert' | 'onlyInvert' | 'attemptBoth' = 'dontInvert';\r\nlet grayscaleWeights: GrayscaleWeights = {\r\n    // weights for quick luma integer approximation (https://en.wikipedia.org/wiki/YUV#Full_swing_for_BT.601)\r\n    red: 77,\r\n    green: 150,\r\n    blue: 29,\r\n    useIntegerApproximation: true,\r\n};\r\n\r\nself.onmessage = event => {\r\n    const id = event['data']['id'];\r\n    const type = event['data']['type'];\r\n    const data = event['data']['data'];\r\n\r\n    switch (type) {\r\n        case 'decode':\r\n            decode(data, id);\r\n            break;\r\n        case 'grayscaleWeights':\r\n            setGrayscaleWeights(data);\r\n            break;\r\n        case 'inversionMode':\r\n            setInversionMode(data);\r\n            break;\r\n        case 'close':\r\n            // close after earlier messages in the event loop finished processing\r\n            self.close();\r\n            break;\r\n    }\r\n};\r\n\r\nfunction decode(data: { data: Uint8ClampedArray, width: number, height: number }, requestId: number): void {\r\n    const rgbaData = data['data'];\r\n    const width = data['width'];\r\n    const height = data['height'];\r\n    const result = jsQR(rgbaData, width, height, {\r\n        inversionAttempts: inversionAttempts,\r\n        greyScaleWeights: grayscaleWeights,\r\n    });\r\n    if (!result) {\r\n        (self as unknown as Worker).postMessage({\r\n            id: requestId,\r\n            type: 'qrResult',\r\n            data: null,\r\n        });\r\n        return;\r\n    }\r\n\r\n    (self as unknown as Worker).postMessage({\r\n        id: requestId,\r\n        type: 'qrResult',\r\n        data: result.data,\r\n        // equivalent to cornerPoints of native BarcodeDetector\r\n        cornerPoints: [\r\n            result.location.topLeftCorner,\r\n            result.location.topRightCorner,\r\n            result.location.bottomRightCorner,\r\n            result.location.bottomLeftCorner,\r\n        ],\r\n    });\r\n}\r\n\r\nfunction setGrayscaleWeights(data: GrayscaleWeights) {\r\n    // update grayscaleWeights in a closure compiler compatible fashion\r\n    grayscaleWeights.red = data['red'];\r\n    grayscaleWeights.green = data['green'];\r\n    grayscaleWeights.blue = data['blue'];\r\n    grayscaleWeights.useIntegerApproximation = data['useIntegerApproximation'];\r\n}\r\n\r\nfunction setInversionMode(inversionMode: 'original' | 'invert' | 'both') {\r\n    switch (inversionMode) {\r\n        case 'original':\r\n            inversionAttempts = 'dontInvert';\r\n            break;\r\n        case 'invert':\r\n            inversionAttempts = 'onlyInvert';\r\n            break;\r\n        case 'both':\r\n            inversionAttempts = 'attemptBoth';\r\n            break;\r\n        default:\r\n            throw new Error('Invalid inversion mode');\r\n    }\r\n}\r\n"],"names":["BitMatrix","constructor","data","width","height","length","createEmpty","Uint8ClampedArray","get","x","y","set","v","setRegion","left","top","Matrix","buffer","bufferSize","Error","value","BitStream","bytes","bitOffset","byteOffset","readBits","numBits","available","toString","result","bitsLeft","toRead","bitsToNotRead","Mode","ModeByte","AlphanumericCharacterCodes","decodeByte","stream","size","text","characterCountSize","i","b","push","decodeURIComponent","map","substr","join","_a","decode","version","chunks","mode","Terminator","ECI","type","assignmentNumber","Numeric","num","a","Math","floor","c","Alphanumeric","charCodeAt","Byte","byteResult","Kanji","k","Uint8Array","StructuredAppend","currentSequence","totalSequence","parity","GenericGFPoly","field","coefficients","coefficientsLength","firstNonZero","zero","degree","isZero","getCoefficient","addOrSubtract","other","smallerCoefficients","largerCoefficients","sumDiff","lengthDiff","multiply","scalar","product","multiplyPoly","aCoefficients","bCoefficients","aLength","bLength","j","addOrSubtractGF","aCoeff","multiplyByMonomial","coefficient","evaluateAt","forEach","GenericGF","primitive","genBase","generatorBase","expTable","Array","logTable","from","one","inverse","buildMonomial","log","exp","runEuclideanAlgorithm","R","tLast","t","r","rLastLast","rLast","tLastLast","q","denominatorLeadingTerm","dltInverse","degreeDiff","scale","sigmaTildeAtZero","twoS","outputBytes","poly","syndromeCoefficients","error","s","evaluation","syndrome","sigmaOmega","errorLocator","numErrors","errorCount","errorLocations","xiInverse","denominator","errorEvaluator","position","VERSIONS","infoBits","versionNumber","alignmentPatternCenters","errorCorrectionLevels","ecCodewordsPerBlock","ecBlocks","numBlocks","dataCodewordsPerBlock","numBitsDiffering","z","bitCount","pushBit","bit","byte","FORMAT_INFO_TABLE","bits","formatInfo","errorCorrectionLevel","dataMask","DATA_MASKS","p","readCodewords","matrix","dimension","codewords","bitsRead","currentByte","readingUp","columnIndex","columnOffset","readVersion","provisionalVersion","topRightVersionBits","bottomLeftVersionBits","bestDifference","Infinity","bestVersion","difference","readFormatInformation","topLeftFormatInfoBits","topRightBottomRightFormatInfoBits","bestFormatInfo","getDataBlocks","ecLevel","ecInfo","dataBlocks","totalCodewords","block","numDataCodewords","slice","shortBlockSize","dataBlock","shift","smallBlockCount","largeBlockCount","decodeMatrix","totalBytes","reduce","resultBytes","resultIndex","decode$1","correctedBytes","decodeData","squareToQuadrilateral","p1","p2","p3","p4","dx3","dy3","a11","a12","a13","a21","a22","a23","a31","a32","a33","dx1","dx2","dy1","dy2","quadrilateralToSquare","sToQ","extract","image","location","qToS","topLeft","topRight","bottomLeft","mappingFunction","sourcePixel","distance","sqrt","pow","sum","values","reorderFinderPatterns","pattern1","pattern2","pattern3","oneTwoDistance","twoThreeDistance","oneThreeDistance","computeDimension","countBlackWhiteRun","moduleSize","round","topDimension","sideDimension","countBlackWhiteRunTowardsPoint","origin","end","switchPoints","steep","abs","fromX","fromY","toX","toY","dx","dy","xStep","yStep","currentPixel","realX","realY","distances","rise","run","towardsEnd","ceil","middleValue","awayFromEnd","concat","scoreBlackWhiteRun","sequence","ratios","averageSize","ratio","scorePattern","point","horizontalRun","verticalRun","topLeftBottomRightRun","topLeftPoint","max","bottomLeftTopRightRun","bottomLeftPoint","min","horzError","vertError","diagDownError","diagUpError","avgSize","ratioError","recenterLocation","leftX","rightX","topY","bottomY","locate","finderPatternQuads","activeFinderPatternQuads","alignmentPatternQuads","activeAlignmentPatternQuads","lastBit","scans","averageFinderPatternBlocksize","validFinderPattern","averageAlignmentPatternBlocksize","validAlignmentPattern","endX","startX","line","matchingQuads","filter","bottom","MAX_QUAD_RATIO","MIN_QUAD_RATIO","scoredFinderPatternPositions","quad","lengths","score","sort","finderPatternGroups","MAX_FINDERPATTERNS_TO_SEARCH","otherPoints","otherPoint","Object","assign","points","bestFinderPatternGroup","alignment","findAlignmentPattern","alignmentPattern","midTopRight","midTopLeft","midBottomLeft","centeredAlignment","e","modulesBetweenFinderPatterns","correctionToTopLeft","expectedAlignmentPattern","alignmentPatterns","sizeScore","scan","locations","extracted","decoded","binaryData","topRightCorner","topLeftCorner","bottomRightCorner","bottomLeftCorner","topRightFinderPattern","topLeftFinderPattern","bottomLeftFinderPattern","bottomRightAlignmentPattern","defaultOptions","inversionAttempts","greyScaleWeights","red","green","blue","useIntegerApproximation","canOverwriteImage","mergeObject","target","src","keys","opt","jsQR","providedOptions","options","create","tryInvertedFirst","shouldInvert","pixelCount","bufferOffset","greyscaleBuffer","greyscalePixels","greyscaleWeights","pixelPosition","g","horizontalRegionCount","REGION_SIZE","verticalRegionCount","blackPointsBuffer","blackPointsCount","blackPoints","verticalRegion","hortizontalRegion","pixelLumosity","average","blackBias","MIN_DYNAMIC_RANGE","averageNeighborBlackPoint","binarizedBuffer","binarized","inverted","returnInverted","invertedBuffer","xRegion","yRegion","lum","threshold","default","grayscaleWeights","self","onmessage","event","self.onmessage","id","rgbaData","postMessage","cornerPoints","close"],"mappings":"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"}